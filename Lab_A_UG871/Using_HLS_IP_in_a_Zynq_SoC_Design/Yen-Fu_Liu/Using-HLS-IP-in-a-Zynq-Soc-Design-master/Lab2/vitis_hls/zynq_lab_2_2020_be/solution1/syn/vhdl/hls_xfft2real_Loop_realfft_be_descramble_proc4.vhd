-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_xfft2real_Loop_realfft_be_descramble_proc4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_lo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_spectrum_lo_full_n : IN STD_LOGIC;
    real_spectrum_lo_write : OUT STD_LOGIC;
    real_spectrum_hi_buf_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_spectrum_hi_buf_M_real_V_ce0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_M_real_V_we0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_M_real_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_hi_buf_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_spectrum_hi_buf_M_imag_V_ce0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_M_imag_V_we0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_M_imag_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    twid_rom_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    twid_rom_M_real_V_ce0 : OUT STD_LOGIC;
    twid_rom_M_real_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
    twid_rom_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    twid_rom_M_imag_V_ce0 : OUT STD_LOGIC;
    twid_rom_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of hls_xfft2real_Loop_realfft_be_descramble_proc4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal real_spectrum_lo_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln89_reg_849 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_203 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_1_M_real_V_load_reg_834 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal descramble_buf_1_M_imag_V_load_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln89_fu_214_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln89_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_849_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln89_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_reg_853 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln93_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_865_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln703_fu_247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_reg_873_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal descramble_buf_0_M_imag_V_load_reg_890 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_imag_V_load_reg_890_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_imag_V_load_reg_890_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_imag_V_load_reg_890_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_imag_V_load_reg_890_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_1_fu_252_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_1_reg_897 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_real_V_load_reg_917 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_real_V_load_reg_917_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_real_V_load_reg_917_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_real_V_load_reg_917_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_1_fu_261_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_1_reg_923 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_fu_265_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_reg_928 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_fu_269_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_reg_933 : STD_LOGIC_VECTOR (16 downto 0);
    signal f_M_imag_V_fu_330_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_938 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_938_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_938_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_938_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_fu_386_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_3_reg_955 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1115_fu_408_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1115_reg_960 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_2_fu_412_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_2_reg_966 : STD_LOGIC_VECTOR (30 downto 0);
    signal f_M_real_V_fu_460_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_972 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_972_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_972_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_1_fu_495_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_796_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_802_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln703_fu_499_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_994 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_fu_503_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_2_fu_516_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_2_reg_1004 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_V_1_fu_521_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_V_1_reg_1009 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_3_fu_535_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln703_3_reg_1014 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_V_1_fu_540_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_V_1_reg_1019 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_fu_625_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_reg_1024 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_3_fu_677_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_3_reg_1029 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_4_fu_729_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_4_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_5_fu_781_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_5_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln98_fu_237_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln703_4_fu_241_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1192_fu_265_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_3_fu_258_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_2_fu_275_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_284_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_2_fu_298_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_4_fu_304_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_290_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_3_fu_324_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_5_fu_314_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_8_fu_278_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_5_fu_338_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_7_fu_352_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_4_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_8_fu_368_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_M_real_V_fu_378_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_6_fu_416_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_fu_428_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_1_fu_434_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_1_fu_454_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_2_fu_444_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_5_fu_468_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_s_fu_473_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_6_fu_483_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_M_imag_V_fu_489_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_816_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_r_V_fu_507_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_808_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln2_fu_526_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_7_fu_545_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_6_fu_550_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_5_fu_555_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_4_fu_560_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_fu_577_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_7_fu_589_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_9_fu_605_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1148_6_fu_595_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_581_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_8_fu_619_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_1_fu_615_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_2_fu_573_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_9_fu_641_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_11_fu_657_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1148_10_fu_647_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_633_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_10_fu_671_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_3_fu_667_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_4_fu_569_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_11_fu_693_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_13_fu_709_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1148_12_fu_699_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_12_fu_723_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_5_fu_719_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_6_fu_565_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_13_fu_745_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1148_15_fu_761_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1148_14_fu_751_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_737_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_14_fu_775_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_7_fu_771_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_796_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_796_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_802_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_808_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_808_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_816_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_816_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_796_ce : STD_LOGIC;
    signal grp_fu_802_ce : STD_LOGIC;
    signal grp_fu_808_ce : STD_LOGIC;
    signal grp_fu_816_ce : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_796_p10 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component hls_xfft2real_mul_mul_16s_15ns_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_mul_mul_16s_16s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_mac_muladd_16s_15ns_31s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_mac_mulsub_16s_16s_31s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    mul_mul_16s_15ns_31_4_1_U9 : component hls_xfft2real_mul_mul_16s_15ns_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_796_p0,
        din1 => grp_fu_796_p1,
        ce => grp_fu_796_ce,
        dout => grp_fu_796_p2);

    mul_mul_16s_16s_31_4_1_U10 : component hls_xfft2real_mul_mul_16s_16s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => twid_rom_M_imag_V_q0,
        din1 => grp_fu_802_p1,
        ce => grp_fu_802_ce,
        dout => grp_fu_802_p2);

    mac_muladd_16s_15ns_31s_31_4_1_U11 : component hls_xfft2real_mac_muladd_16s_15ns_31s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_808_p0,
        din1 => grp_fu_808_p1,
        din2 => grp_fu_802_p2,
        ce => grp_fu_808_ce,
        dout => grp_fu_808_p3);

    mac_mulsub_16s_16s_31s_31_4_1_U12 : component hls_xfft2real_mac_mulsub_16s_16s_31s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_816_p0,
        din1 => grp_fu_816_p1,
        din2 => grp_fu_796_p2,
        ce => grp_fu_816_ce,
        dout => grp_fu_816_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_203 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln89_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_reg_203 <= add_ln89_fu_214_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln93_reg_865_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln89_reg_849_pp0_iter5_reg = ap_const_lv1_0))) then
                add_ln703_reg_994 <= add_ln703_fu_499_p2;
                sub_ln703_reg_999 <= sub_ln703_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln89_reg_849 = ap_const_lv1_0))) then
                descramble_buf_0_M_imag_V_load_reg_890 <= descramble_buf_0_M_imag_V_q0;
                sub_ln703_1_reg_897 <= sub_ln703_1_fu_252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                descramble_buf_0_M_imag_V_load_reg_890_pp0_iter2_reg <= descramble_buf_0_M_imag_V_load_reg_890;
                descramble_buf_0_M_imag_V_load_reg_890_pp0_iter3_reg <= descramble_buf_0_M_imag_V_load_reg_890_pp0_iter2_reg;
                descramble_buf_0_M_imag_V_load_reg_890_pp0_iter4_reg <= descramble_buf_0_M_imag_V_load_reg_890_pp0_iter3_reg;
                descramble_buf_0_M_imag_V_load_reg_890_pp0_iter5_reg <= descramble_buf_0_M_imag_V_load_reg_890_pp0_iter4_reg;
                descramble_buf_0_M_real_V_load_reg_917_pp0_iter3_reg <= descramble_buf_0_M_real_V_load_reg_917;
                descramble_buf_0_M_real_V_load_reg_917_pp0_iter4_reg <= descramble_buf_0_M_real_V_load_reg_917_pp0_iter3_reg;
                descramble_buf_0_M_real_V_load_reg_917_pp0_iter5_reg <= descramble_buf_0_M_real_V_load_reg_917_pp0_iter4_reg;
                f_M_imag_V_reg_938_pp0_iter3_reg <= f_M_imag_V_reg_938;
                f_M_imag_V_reg_938_pp0_iter4_reg <= f_M_imag_V_reg_938_pp0_iter3_reg;
                f_M_imag_V_reg_938_pp0_iter5_reg <= f_M_imag_V_reg_938_pp0_iter4_reg;
                f_M_real_V_reg_972_pp0_iter4_reg <= f_M_real_V_reg_972;
                f_M_real_V_reg_972_pp0_iter5_reg <= f_M_real_V_reg_972_pp0_iter4_reg;
                icmp_ln89_reg_849_pp0_iter2_reg <= icmp_ln89_reg_849_pp0_iter1_reg;
                icmp_ln89_reg_849_pp0_iter3_reg <= icmp_ln89_reg_849_pp0_iter2_reg;
                icmp_ln89_reg_849_pp0_iter4_reg <= icmp_ln89_reg_849_pp0_iter3_reg;
                icmp_ln89_reg_849_pp0_iter5_reg <= icmp_ln89_reg_849_pp0_iter4_reg;
                icmp_ln89_reg_849_pp0_iter6_reg <= icmp_ln89_reg_849_pp0_iter5_reg;
                icmp_ln89_reg_849_pp0_iter7_reg <= icmp_ln89_reg_849_pp0_iter6_reg;
                icmp_ln93_reg_865_pp0_iter2_reg <= icmp_ln93_reg_865_pp0_iter1_reg;
                icmp_ln93_reg_865_pp0_iter3_reg <= icmp_ln93_reg_865_pp0_iter2_reg;
                icmp_ln93_reg_865_pp0_iter4_reg <= icmp_ln93_reg_865_pp0_iter3_reg;
                icmp_ln93_reg_865_pp0_iter5_reg <= icmp_ln93_reg_865_pp0_iter4_reg;
                icmp_ln93_reg_865_pp0_iter6_reg <= icmp_ln93_reg_865_pp0_iter5_reg;
                    zext_ln703_reg_873_pp0_iter2_reg(7 downto 0) <= zext_ln703_reg_873_pp0_iter1_reg(7 downto 0);
                    zext_ln703_reg_873_pp0_iter3_reg(7 downto 0) <= zext_ln703_reg_873_pp0_iter2_reg(7 downto 0);
                    zext_ln703_reg_873_pp0_iter4_reg(7 downto 0) <= zext_ln703_reg_873_pp0_iter3_reg(7 downto 0);
                    zext_ln703_reg_873_pp0_iter5_reg(7 downto 0) <= zext_ln703_reg_873_pp0_iter4_reg(7 downto 0);
                    zext_ln703_reg_873_pp0_iter6_reg(7 downto 0) <= zext_ln703_reg_873_pp0_iter5_reg(7 downto 0);
                    zext_ln703_reg_873_pp0_iter7_reg(7 downto 0) <= zext_ln703_reg_873_pp0_iter6_reg(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln89_reg_849_pp0_iter1_reg = ap_const_lv1_0))) then
                descramble_buf_0_M_real_V_load_reg_917 <= descramble_buf_0_M_real_V_q0;
                f_M_imag_V_reg_938 <= f_M_imag_V_fu_330_p3;
                ret_V_9_reg_933 <= ret_V_9_fu_269_p2;
                sext_ln1118_2_reg_966 <= sext_ln1118_2_fu_412_p1;
                sext_ln1192_1_reg_923 <= sext_ln1192_1_fu_261_p1;
                sext_ln1192_reg_928 <= sext_ln1192_fu_265_p1;
                tmp_5_reg_950 <= ret_V_9_fu_269_p2(16 downto 16);
                trunc_ln1148_3_reg_955 <= ret_V_9_fu_269_p2(16 downto 1);
                    zext_ln1115_reg_960(14 downto 0) <= zext_ln1115_fu_408_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                descramble_buf_1_M_imag_V_load_reg_839 <= descramble_buf_1_M_imag_V_q0;
                descramble_buf_1_M_real_V_load_reg_834 <= descramble_buf_1_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln89_reg_849_pp0_iter2_reg = ap_const_lv1_0))) then
                f_M_real_V_reg_972 <= f_M_real_V_fu_460_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln89_reg_849 <= icmp_ln89_fu_220_p2;
                icmp_ln89_reg_849_pp0_iter1_reg <= icmp_ln89_reg_849;
                icmp_ln93_reg_865_pp0_iter1_reg <= icmp_ln93_reg_865;
                    zext_ln703_reg_873_pp0_iter1_reg(7 downto 0) <= zext_ln703_reg_873(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln89_fu_220_p2 = ap_const_lv1_0))) then
                icmp_ln93_reg_865 <= icmp_ln93_fu_231_p2;
                    zext_ln703_reg_873(7 downto 0) <= zext_ln703_fu_247_p1(7 downto 0);
                    zext_ln89_reg_853(8 downto 0) <= zext_ln89_fu_226_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln93_reg_865_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln89_reg_849_pp0_iter5_reg = ap_const_lv1_0))) then
                p_r_M_imag_V_1_reg_1019 <= p_r_M_imag_V_1_fu_540_p2;
                p_r_M_real_V_1_reg_1009 <= p_r_M_real_V_1_fu_521_p2;
                sub_ln703_2_reg_1004 <= sub_ln703_2_fu_516_p2;
                sub_ln703_3_reg_1014 <= sub_ln703_3_fu_535_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln89_reg_849_pp0_iter6_reg = ap_const_lv1_0))) then
                select_ln1148_3_reg_1029 <= select_ln1148_3_fu_677_p3;
                select_ln1148_4_reg_1034 <= select_ln1148_4_fu_729_p3;
                select_ln1148_5_reg_1039 <= select_ln1148_5_fu_781_p3;
                select_ln1148_reg_1024 <= select_ln1148_fu_625_p3;
            end if;
        end if;
    end process;
    zext_ln89_reg_853(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter2_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter3_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter4_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter5_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter6_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln703_reg_873_pp0_iter7_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1115_reg_960(30 downto 15) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, icmp_ln89_fu_220_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln89_fu_220_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln89_fu_220_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln703_fu_499_p2 <= std_logic_vector(signed(descramble_buf_0_M_imag_V_load_reg_890_pp0_iter5_reg) + signed(descramble_buf_0_M_real_V_load_reg_917_pp0_iter5_reg));
    add_ln89_fu_214_p2 <= std_logic_vector(unsigned(i_reg_203) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_spectrum_lo_full_n, ap_enable_reg_pp0_iter8, icmp_ln89_reg_849_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (real_spectrum_lo_full_n = ap_const_logic_0) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_spectrum_lo_full_n, ap_enable_reg_pp0_iter8, icmp_ln89_reg_849_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (real_spectrum_lo_full_n = ap_const_logic_0) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_spectrum_lo_full_n, ap_enable_reg_pp0_iter8, icmp_ln89_reg_849_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (real_spectrum_lo_full_n = ap_const_logic_0) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter8_assign_proc : process(real_spectrum_lo_full_n, icmp_ln89_reg_849_pp0_iter7_reg)
    begin
                ap_block_state11_pp0_stage0_iter8 <= ((real_spectrum_lo_full_n = ap_const_logic_0) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln89_fu_220_p2)
    begin
        if ((icmp_ln89_fu_220_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    descramble_buf_0_M_imag_V_address0 <= zext_ln89_fu_226_p1(8 - 1 downto 0);

    descramble_buf_0_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_0_M_real_V_address0 <= zext_ln89_reg_853(8 - 1 downto 0);

    descramble_buf_0_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_imag_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln703_fu_247_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            descramble_buf_1_M_imag_V_address0 <= zext_ln703_fu_247_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            descramble_buf_1_M_imag_V_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        else 
            descramble_buf_1_M_imag_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    descramble_buf_1_M_imag_V_ce0_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_real_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, zext_ln703_reg_873, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            descramble_buf_1_M_real_V_address0 <= zext_ln703_reg_873(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            descramble_buf_1_M_real_V_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        else 
            descramble_buf_1_M_real_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    descramble_buf_1_M_real_V_ce0_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    f_M_imag_V_fu_330_p3 <= 
        sub_ln1148_3_fu_324_p2 when (tmp_3_fu_290_p3(0) = '1') else 
        trunc_ln1148_5_fu_314_p4;
    f_M_real_V_fu_460_p3 <= 
        sub_ln1148_1_fu_454_p2 when (tmp_fu_420_p3(0) = '1') else 
        trunc_ln1148_2_fu_444_p4;
    g_M_imag_V_fu_489_p3 <= 
        sub_ln1148_6_fu_483_p2 when (tmp_5_reg_950(0) = '1') else 
        trunc_ln1148_3_reg_955;
    g_M_real_V_fu_378_p3 <= 
        sub_ln1148_4_fu_362_p2 when (tmp_4_fu_344_p3(0) = '1') else 
        trunc_ln1148_8_fu_368_p4;

    grp_fu_796_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_796_ce <= ap_const_logic_1;
        else 
            grp_fu_796_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_796_p0 <= sext_ln1118_fu_386_p1(16 - 1 downto 0);
    grp_fu_796_p1 <= grp_fu_796_p10(15 - 1 downto 0);
    grp_fu_796_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(twid_rom_M_real_V_q0),31));

    grp_fu_802_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_802_ce <= ap_const_logic_1;
        else 
            grp_fu_802_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_802_p1 <= sext_ln1118_fu_386_p1(16 - 1 downto 0);

    grp_fu_808_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_808_ce <= ap_const_logic_1;
        else 
            grp_fu_808_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_808_p0 <= sext_ln1118_1_fu_495_p1(16 - 1 downto 0);
    grp_fu_808_p1 <= zext_ln1115_reg_960(15 - 1 downto 0);

    grp_fu_816_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_816_ce <= ap_const_logic_1;
        else 
            grp_fu_816_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_816_p0 <= sext_ln1118_2_reg_966(16 - 1 downto 0);
    grp_fu_816_p1 <= sext_ln1118_1_fu_495_p1(16 - 1 downto 0);
    icmp_ln89_fu_220_p2 <= "1" when (i_reg_203 = ap_const_lv9_100) else "0";
    icmp_ln93_fu_231_p2 <= "1" when (i_reg_203 = ap_const_lv9_0) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    p_r_M_imag_V_1_fu_540_p2 <= std_logic_vector(unsigned(trunc_ln2_fu_526_p4) + unsigned(f_M_imag_V_reg_938_pp0_iter5_reg));
    p_r_M_real_V_1_fu_521_p2 <= std_logic_vector(unsigned(p_r_V_fu_507_p4) + unsigned(f_M_real_V_reg_972_pp0_iter5_reg));
    p_r_V_fu_507_p4 <= grp_fu_816_p3(30 downto 15);
    r_V_5_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(ret_V_8_fu_278_p2));
    real_spectrum_hi_buf_M_imag_V_address0 <= zext_ln703_reg_873_pp0_iter7_reg(8 - 1 downto 0);

    real_spectrum_hi_buf_M_imag_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            real_spectrum_hi_buf_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_M_imag_V_d0 <= select_ln1148_5_reg_1039;

    real_spectrum_hi_buf_M_imag_V_we0_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln89_reg_849_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0))) then 
            real_spectrum_hi_buf_M_imag_V_we0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_M_real_V_address0 <= zext_ln703_reg_873_pp0_iter7_reg(8 - 1 downto 0);

    real_spectrum_hi_buf_M_real_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            real_spectrum_hi_buf_M_real_V_ce0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_M_real_V_d0 <= select_ln1148_4_reg_1034;

    real_spectrum_hi_buf_M_real_V_we0_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln89_reg_849_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0))) then 
            real_spectrum_hi_buf_M_real_V_we0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_spectrum_lo_blk_n_assign_proc : process(real_spectrum_lo_full_n, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, icmp_ln89_reg_849_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0))) then 
            real_spectrum_lo_blk_n <= real_spectrum_lo_full_n;
        else 
            real_spectrum_lo_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_spectrum_lo_din <= (select_ln1148_3_reg_1029 & select_ln1148_reg_1024);

    real_spectrum_lo_write_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln89_reg_849_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln89_reg_849_pp0_iter7_reg = ap_const_lv1_0))) then 
            real_spectrum_lo_write <= ap_const_logic_1;
        else 
            real_spectrum_lo_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_6_fu_416_p2 <= std_logic_vector(signed(sext_ln1192_1_reg_923) + signed(sext_ln1192_reg_928));
    ret_V_7_fu_284_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_258_p1) + signed(sext_ln1192_2_fu_275_p1));
    ret_V_8_fu_278_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_258_p1) - signed(sext_ln1192_2_fu_275_p1));
    ret_V_9_fu_269_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_261_p1) - signed(sext_ln1192_fu_265_p1));
    select_ln1148_3_fu_677_p3 <= 
        sub_ln1148_10_fu_671_p2 when (tmp_7_fu_633_p3(0) = '1') else 
        sext_ln1148_3_fu_667_p1;
    select_ln1148_4_fu_729_p3 <= 
        sub_ln1148_12_fu_723_p2 when (tmp_8_fu_685_p3(0) = '1') else 
        sext_ln1148_5_fu_719_p1;
    select_ln1148_5_fu_781_p3 <= 
        sub_ln1148_14_fu_775_p2 when (tmp_9_fu_737_p3(0) = '1') else 
        sext_ln1148_7_fu_771_p1;
    select_ln1148_fu_625_p3 <= 
        sub_ln1148_8_fu_619_p2 when (tmp_6_fu_581_p3(0) = '1') else 
        sext_ln1148_1_fu_615_p1;
        sext_ln1118_1_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_M_imag_V_fu_489_p3),31));

        sext_ln1118_2_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(twid_rom_M_imag_V_q0),31));

        sext_ln1118_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_M_real_V_fu_378_p3),31));

        sext_ln1148_1_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_9_fu_605_p4),16));

        sext_ln1148_2_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_V_5_fu_555_p3),17));

        sext_ln1148_3_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_11_fu_657_p4),16));

        sext_ln1148_4_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_V_6_fu_550_p3),17));

        sext_ln1148_5_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_13_fu_709_p4),16));

        sext_ln1148_6_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_V_7_fu_545_p3),17));

        sext_ln1148_7_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_15_fu_761_p4),16));

        sext_ln1148_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_V_4_fu_560_p3),17));

        sext_ln1192_1_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(descramble_buf_1_M_real_V_q0),17));

        sext_ln1192_2_fu_275_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(descramble_buf_0_M_imag_V_load_reg_890),17));

        sext_ln1192_3_fu_258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln703_1_reg_897),17));

    sext_ln1192_fu_265_p0 <= descramble_buf_0_M_real_V_q0;
        sext_ln1192_fu_265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1192_fu_265_p0),17));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1148_10_fu_671_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_10_fu_647_p4));
    sub_ln1148_11_fu_693_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_4_fu_569_p1));
    sub_ln1148_12_fu_723_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_12_fu_699_p4));
    sub_ln1148_13_fu_745_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_6_fu_565_p1));
    sub_ln1148_14_fu_775_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_14_fu_751_p4));
    sub_ln1148_1_fu_454_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_1_fu_434_p4));
    sub_ln1148_2_fu_298_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(ret_V_7_fu_284_p2));
    sub_ln1148_3_fu_324_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_4_fu_304_p4));
    sub_ln1148_4_fu_362_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_7_fu_352_p4));
    sub_ln1148_5_fu_468_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(ret_V_9_reg_933));
    sub_ln1148_6_fu_483_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_s_fu_473_p4));
    sub_ln1148_7_fu_589_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_fu_577_p1));
    sub_ln1148_8_fu_619_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_6_fu_595_p4));
    sub_ln1148_9_fu_641_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_2_fu_573_p1));
    sub_ln1148_fu_428_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(ret_V_6_fu_416_p2));
    sub_ln703_1_fu_252_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(descramble_buf_1_M_imag_V_q0));
    sub_ln703_2_fu_516_p2 <= std_logic_vector(unsigned(f_M_real_V_reg_972_pp0_iter5_reg) - unsigned(p_r_V_fu_507_p4));
    sub_ln703_3_fu_535_p2 <= std_logic_vector(unsigned(trunc_ln2_fu_526_p4) - unsigned(f_M_imag_V_reg_938_pp0_iter5_reg));
    sub_ln703_4_fu_241_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(trunc_ln98_fu_237_p1));
    sub_ln703_fu_503_p2 <= std_logic_vector(signed(descramble_buf_0_M_real_V_load_reg_917_pp0_iter5_reg) - signed(descramble_buf_0_M_imag_V_load_reg_890_pp0_iter5_reg));
    t_V_4_fu_560_p3 <= 
        add_ln703_reg_994 when (icmp_ln93_reg_865_pp0_iter6_reg(0) = '1') else 
        p_r_M_real_V_1_reg_1009;
    t_V_5_fu_555_p3 <= 
        sub_ln703_reg_999 when (icmp_ln93_reg_865_pp0_iter6_reg(0) = '1') else 
        p_r_M_imag_V_1_reg_1019;
    t_V_6_fu_550_p3 <= 
        descramble_buf_1_M_real_V_load_reg_834 when (icmp_ln93_reg_865_pp0_iter6_reg(0) = '1') else 
        sub_ln703_2_reg_1004;
    t_V_7_fu_545_p3 <= 
        descramble_buf_1_M_imag_V_load_reg_839 when (icmp_ln93_reg_865_pp0_iter6_reg(0) = '1') else 
        sub_ln703_3_reg_1014;
    tmp_3_fu_290_p3 <= ret_V_7_fu_284_p2(16 downto 16);
    tmp_4_fu_344_p3 <= r_V_5_fu_338_p2(16 downto 16);
    tmp_6_fu_581_p3 <= t_V_4_fu_560_p3(15 downto 15);
    tmp_7_fu_633_p3 <= t_V_5_fu_555_p3(15 downto 15);
    tmp_8_fu_685_p3 <= t_V_6_fu_550_p3(15 downto 15);
    tmp_9_fu_737_p3 <= t_V_7_fu_545_p3(15 downto 15);
    tmp_fu_420_p3 <= ret_V_6_fu_416_p2(16 downto 16);
    trunc_ln1148_10_fu_647_p4 <= sub_ln1148_9_fu_641_p2(16 downto 1);
    trunc_ln1148_11_fu_657_p4 <= t_V_5_fu_555_p3(15 downto 1);
    trunc_ln1148_12_fu_699_p4 <= sub_ln1148_11_fu_693_p2(16 downto 1);
    trunc_ln1148_13_fu_709_p4 <= t_V_6_fu_550_p3(15 downto 1);
    trunc_ln1148_14_fu_751_p4 <= sub_ln1148_13_fu_745_p2(16 downto 1);
    trunc_ln1148_15_fu_761_p4 <= t_V_7_fu_545_p3(15 downto 1);
    trunc_ln1148_1_fu_434_p4 <= sub_ln1148_fu_428_p2(16 downto 1);
    trunc_ln1148_2_fu_444_p4 <= ret_V_6_fu_416_p2(16 downto 1);
    trunc_ln1148_4_fu_304_p4 <= sub_ln1148_2_fu_298_p2(16 downto 1);
    trunc_ln1148_5_fu_314_p4 <= ret_V_7_fu_284_p2(16 downto 1);
    trunc_ln1148_6_fu_595_p4 <= sub_ln1148_7_fu_589_p2(16 downto 1);
    trunc_ln1148_7_fu_352_p4 <= ret_V_8_fu_278_p2(16 downto 1);
    trunc_ln1148_8_fu_368_p4 <= r_V_5_fu_338_p2(16 downto 1);
    trunc_ln1148_9_fu_605_p4 <= t_V_4_fu_560_p3(15 downto 1);
    trunc_ln1148_s_fu_473_p4 <= sub_ln1148_5_fu_468_p2(16 downto 1);
    trunc_ln2_fu_526_p4 <= grp_fu_808_p3(30 downto 15);
    trunc_ln98_fu_237_p1 <= i_reg_203(8 - 1 downto 0);
    twid_rom_M_imag_V_address0 <= zext_ln89_reg_853(8 - 1 downto 0);

    twid_rom_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            twid_rom_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            twid_rom_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_M_real_V_address0 <= zext_ln89_reg_853(8 - 1 downto 0);

    twid_rom_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            twid_rom_M_real_V_ce0 <= ap_const_logic_1;
        else 
            twid_rom_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1115_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(twid_rom_M_real_V_q0),31));
    zext_ln703_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln703_4_fu_241_p2),64));
    zext_ln89_fu_226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_203),64));
end behav;
