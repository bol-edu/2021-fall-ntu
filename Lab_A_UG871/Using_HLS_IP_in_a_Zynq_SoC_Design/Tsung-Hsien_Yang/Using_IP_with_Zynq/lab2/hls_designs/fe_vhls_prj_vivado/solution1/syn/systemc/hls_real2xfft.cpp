// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hls_real2xfft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<32> hls_real2xfft::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> hls_real2xfft::ap_const_lv1_0 = "0";
const sc_logic hls_real2xfft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_real2xfft::ap_const_logic_0 = sc_dt::Log_0;

hls_real2xfft::hls_real2xfft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Loop_sliding_win_del_U0 = new Loop_sliding_win_del("Loop_sliding_win_del_U0");
    Loop_sliding_win_del_U0->ap_clk(ap_clk);
    Loop_sliding_win_del_U0->ap_rst(ap_rst_n_inv);
    Loop_sliding_win_del_U0->ap_start(Loop_sliding_win_del_U0_ap_start);
    Loop_sliding_win_del_U0->start_full_n(start_for_Loop_sliding_win_out_U0_full_n);
    Loop_sliding_win_del_U0->ap_done(Loop_sliding_win_del_U0_ap_done);
    Loop_sliding_win_del_U0->ap_continue(Loop_sliding_win_del_U0_ap_continue);
    Loop_sliding_win_del_U0->ap_idle(Loop_sliding_win_del_U0_ap_idle);
    Loop_sliding_win_del_U0->ap_ready(Loop_sliding_win_del_U0_ap_ready);
    Loop_sliding_win_del_U0->din_V_V_TVALID(din_V_V_TVALID);
    Loop_sliding_win_del_U0->nodelay_i_0_din(Loop_sliding_win_del_U0_nodelay_i_0_din);
    Loop_sliding_win_del_U0->nodelay_i_0_full_n(nodelay_i_0_channel_full_n);
    Loop_sliding_win_del_U0->nodelay_i_0_write(Loop_sliding_win_del_U0_nodelay_i_0_write);
    Loop_sliding_win_del_U0->nodelay_i_1_din(Loop_sliding_win_del_U0_nodelay_i_1_din);
    Loop_sliding_win_del_U0->nodelay_i_1_full_n(nodelay_i_1_channel_full_n);
    Loop_sliding_win_del_U0->nodelay_i_1_write(Loop_sliding_win_del_U0_nodelay_i_1_write);
    Loop_sliding_win_del_U0->delayed_i_0_din(Loop_sliding_win_del_U0_delayed_i_0_din);
    Loop_sliding_win_del_U0->delayed_i_0_full_n(delayed_i_0_channel_full_n);
    Loop_sliding_win_del_U0->delayed_i_0_write(Loop_sliding_win_del_U0_delayed_i_0_write);
    Loop_sliding_win_del_U0->delayed_i_1_din(Loop_sliding_win_del_U0_delayed_i_1_din);
    Loop_sliding_win_del_U0->delayed_i_1_full_n(delayed_i_1_channel_full_n);
    Loop_sliding_win_del_U0->delayed_i_1_write(Loop_sliding_win_del_U0_delayed_i_1_write);
    Loop_sliding_win_del_U0->start_out(Loop_sliding_win_del_U0_start_out);
    Loop_sliding_win_del_U0->start_write(Loop_sliding_win_del_U0_start_write);
    Loop_sliding_win_del_U0->din_V_V_TDATA(din_V_V_TDATA);
    Loop_sliding_win_del_U0->din_V_V_TREADY(Loop_sliding_win_del_U0_din_V_V_TREADY);
    Loop_sliding_win_out_U0 = new Loop_sliding_win_out("Loop_sliding_win_out_U0");
    Loop_sliding_win_out_U0->ap_clk(ap_clk);
    Loop_sliding_win_out_U0->ap_rst(ap_rst_n_inv);
    Loop_sliding_win_out_U0->ap_start(Loop_sliding_win_out_U0_ap_start);
    Loop_sliding_win_out_U0->start_full_n(start_for_window_fn_U0_full_n);
    Loop_sliding_win_out_U0->ap_done(Loop_sliding_win_out_U0_ap_done);
    Loop_sliding_win_out_U0->ap_continue(Loop_sliding_win_out_U0_ap_continue);
    Loop_sliding_win_out_U0->ap_idle(Loop_sliding_win_out_U0_ap_idle);
    Loop_sliding_win_out_U0->ap_ready(Loop_sliding_win_out_U0_ap_ready);
    Loop_sliding_win_out_U0->delayed_i_0_dout(delayed_i_0_channel_dout);
    Loop_sliding_win_out_U0->delayed_i_0_empty_n(delayed_i_0_channel_empty_n);
    Loop_sliding_win_out_U0->delayed_i_0_read(Loop_sliding_win_out_U0_delayed_i_0_read);
    Loop_sliding_win_out_U0->nodelay_i_0_dout(nodelay_i_0_channel_dout);
    Loop_sliding_win_out_U0->nodelay_i_0_empty_n(nodelay_i_0_channel_empty_n);
    Loop_sliding_win_out_U0->nodelay_i_0_read(Loop_sliding_win_out_U0_nodelay_i_0_read);
    Loop_sliding_win_out_U0->delayed_i_1_dout(delayed_i_1_channel_dout);
    Loop_sliding_win_out_U0->delayed_i_1_empty_n(delayed_i_1_channel_empty_n);
    Loop_sliding_win_out_U0->delayed_i_1_read(Loop_sliding_win_out_U0_delayed_i_1_read);
    Loop_sliding_win_out_U0->nodelay_i_1_dout(nodelay_i_1_channel_dout);
    Loop_sliding_win_out_U0->nodelay_i_1_empty_n(nodelay_i_1_channel_empty_n);
    Loop_sliding_win_out_U0->nodelay_i_1_read(Loop_sliding_win_out_U0_nodelay_i_1_read);
    Loop_sliding_win_out_U0->start_out(Loop_sliding_win_out_U0_start_out);
    Loop_sliding_win_out_U0->start_write(Loop_sliding_win_out_U0_start_write);
    Loop_sliding_win_out_U0->data2window_1_din(Loop_sliding_win_out_U0_data2window_1_din);
    Loop_sliding_win_out_U0->data2window_1_full_n(data2window_1_channe_full_n);
    Loop_sliding_win_out_U0->data2window_1_write(Loop_sliding_win_out_U0_data2window_1_write);
    Loop_sliding_win_out_U0->data2window_0_din(Loop_sliding_win_out_U0_data2window_0_din);
    Loop_sliding_win_out_U0->data2window_0_full_n(data2window_0_channe_full_n);
    Loop_sliding_win_out_U0->data2window_0_write(Loop_sliding_win_out_U0_data2window_0_write);
    window_fn_U0 = new window_fn("window_fn_U0");
    window_fn_U0->ap_clk(ap_clk);
    window_fn_U0->ap_rst(ap_rst_n_inv);
    window_fn_U0->ap_start(window_fn_U0_ap_start);
    window_fn_U0->start_full_n(start_for_Loop_real2xfft_outpu_U0_full_n);
    window_fn_U0->ap_done(window_fn_U0_ap_done);
    window_fn_U0->ap_continue(window_fn_U0_ap_continue);
    window_fn_U0->ap_idle(window_fn_U0_ap_idle);
    window_fn_U0->ap_ready(window_fn_U0_ap_ready);
    window_fn_U0->indata_0_V_dout(data2window_0_channe_dout);
    window_fn_U0->indata_0_V_empty_n(data2window_0_channe_empty_n);
    window_fn_U0->indata_0_V_read(window_fn_U0_indata_0_V_read);
    window_fn_U0->indata_1_V_dout(data2window_1_channe_dout);
    window_fn_U0->indata_1_V_empty_n(data2window_1_channe_empty_n);
    window_fn_U0->indata_1_V_read(window_fn_U0_indata_1_V_read);
    window_fn_U0->start_out(window_fn_U0_start_out);
    window_fn_U0->start_write(window_fn_U0_start_write);
    window_fn_U0->outdata_0_V_din(window_fn_U0_outdata_0_V_din);
    window_fn_U0->outdata_0_V_full_n(windowed_0_channel_full_n);
    window_fn_U0->outdata_0_V_write(window_fn_U0_outdata_0_V_write);
    window_fn_U0->outdata_1_V_din(window_fn_U0_outdata_1_V_din);
    window_fn_U0->outdata_1_V_full_n(windowed_1_channel_full_n);
    window_fn_U0->outdata_1_V_write(window_fn_U0_outdata_1_V_write);
    Loop_real2xfft_outpu_U0 = new Loop_real2xfft_outpu("Loop_real2xfft_outpu_U0");
    Loop_real2xfft_outpu_U0->ap_clk(ap_clk);
    Loop_real2xfft_outpu_U0->ap_rst(ap_rst_n_inv);
    Loop_real2xfft_outpu_U0->ap_start(Loop_real2xfft_outpu_U0_ap_start);
    Loop_real2xfft_outpu_U0->ap_done(Loop_real2xfft_outpu_U0_ap_done);
    Loop_real2xfft_outpu_U0->ap_continue(Loop_real2xfft_outpu_U0_ap_continue);
    Loop_real2xfft_outpu_U0->ap_idle(Loop_real2xfft_outpu_U0_ap_idle);
    Loop_real2xfft_outpu_U0->ap_ready(Loop_real2xfft_outpu_U0_ap_ready);
    Loop_real2xfft_outpu_U0->windowed_0_dout(windowed_0_channel_dout);
    Loop_real2xfft_outpu_U0->windowed_0_empty_n(windowed_0_channel_empty_n);
    Loop_real2xfft_outpu_U0->windowed_0_read(Loop_real2xfft_outpu_U0_windowed_0_read);
    Loop_real2xfft_outpu_U0->windowed_1_dout(windowed_1_channel_dout);
    Loop_real2xfft_outpu_U0->windowed_1_empty_n(windowed_1_channel_empty_n);
    Loop_real2xfft_outpu_U0->windowed_1_read(Loop_real2xfft_outpu_U0_windowed_1_read);
    Loop_real2xfft_outpu_U0->dout_TREADY(dout_TREADY);
    Loop_real2xfft_outpu_U0->dout_TDATA(Loop_real2xfft_outpu_U0_dout_TDATA);
    Loop_real2xfft_outpu_U0->dout_TVALID(Loop_real2xfft_outpu_U0_dout_TVALID);
    Loop_real2xfft_outpu_U0->dout_TLAST(Loop_real2xfft_outpu_U0_dout_TLAST);
    delayed_i_0_channel_U = new fifo_w16_d256_A("delayed_i_0_channel_U");
    delayed_i_0_channel_U->clk(ap_clk);
    delayed_i_0_channel_U->reset(ap_rst_n_inv);
    delayed_i_0_channel_U->if_read_ce(ap_var_for_const0);
    delayed_i_0_channel_U->if_write_ce(ap_var_for_const0);
    delayed_i_0_channel_U->if_din(Loop_sliding_win_del_U0_delayed_i_0_din);
    delayed_i_0_channel_U->if_full_n(delayed_i_0_channel_full_n);
    delayed_i_0_channel_U->if_write(Loop_sliding_win_del_U0_delayed_i_0_write);
    delayed_i_0_channel_U->if_dout(delayed_i_0_channel_dout);
    delayed_i_0_channel_U->if_empty_n(delayed_i_0_channel_empty_n);
    delayed_i_0_channel_U->if_read(Loop_sliding_win_out_U0_delayed_i_0_read);
    delayed_i_1_channel_U = new fifo_w16_d256_A("delayed_i_1_channel_U");
    delayed_i_1_channel_U->clk(ap_clk);
    delayed_i_1_channel_U->reset(ap_rst_n_inv);
    delayed_i_1_channel_U->if_read_ce(ap_var_for_const0);
    delayed_i_1_channel_U->if_write_ce(ap_var_for_const0);
    delayed_i_1_channel_U->if_din(Loop_sliding_win_del_U0_delayed_i_1_din);
    delayed_i_1_channel_U->if_full_n(delayed_i_1_channel_full_n);
    delayed_i_1_channel_U->if_write(Loop_sliding_win_del_U0_delayed_i_1_write);
    delayed_i_1_channel_U->if_dout(delayed_i_1_channel_dout);
    delayed_i_1_channel_U->if_empty_n(delayed_i_1_channel_empty_n);
    delayed_i_1_channel_U->if_read(Loop_sliding_win_out_U0_delayed_i_1_read);
    nodelay_i_0_channel_U = new fifo_w16_d512_A("nodelay_i_0_channel_U");
    nodelay_i_0_channel_U->clk(ap_clk);
    nodelay_i_0_channel_U->reset(ap_rst_n_inv);
    nodelay_i_0_channel_U->if_read_ce(ap_var_for_const0);
    nodelay_i_0_channel_U->if_write_ce(ap_var_for_const0);
    nodelay_i_0_channel_U->if_din(Loop_sliding_win_del_U0_nodelay_i_0_din);
    nodelay_i_0_channel_U->if_full_n(nodelay_i_0_channel_full_n);
    nodelay_i_0_channel_U->if_write(Loop_sliding_win_del_U0_nodelay_i_0_write);
    nodelay_i_0_channel_U->if_dout(nodelay_i_0_channel_dout);
    nodelay_i_0_channel_U->if_empty_n(nodelay_i_0_channel_empty_n);
    nodelay_i_0_channel_U->if_read(Loop_sliding_win_out_U0_nodelay_i_0_read);
    nodelay_i_1_channel_U = new fifo_w16_d512_A("nodelay_i_1_channel_U");
    nodelay_i_1_channel_U->clk(ap_clk);
    nodelay_i_1_channel_U->reset(ap_rst_n_inv);
    nodelay_i_1_channel_U->if_read_ce(ap_var_for_const0);
    nodelay_i_1_channel_U->if_write_ce(ap_var_for_const0);
    nodelay_i_1_channel_U->if_din(Loop_sliding_win_del_U0_nodelay_i_1_din);
    nodelay_i_1_channel_U->if_full_n(nodelay_i_1_channel_full_n);
    nodelay_i_1_channel_U->if_write(Loop_sliding_win_del_U0_nodelay_i_1_write);
    nodelay_i_1_channel_U->if_dout(nodelay_i_1_channel_dout);
    nodelay_i_1_channel_U->if_empty_n(nodelay_i_1_channel_empty_n);
    nodelay_i_1_channel_U->if_read(Loop_sliding_win_out_U0_nodelay_i_1_read);
    data2window_1_channe_U = new fifo_w16_d2_A("data2window_1_channe_U");
    data2window_1_channe_U->clk(ap_clk);
    data2window_1_channe_U->reset(ap_rst_n_inv);
    data2window_1_channe_U->if_read_ce(ap_var_for_const0);
    data2window_1_channe_U->if_write_ce(ap_var_for_const0);
    data2window_1_channe_U->if_din(Loop_sliding_win_out_U0_data2window_1_din);
    data2window_1_channe_U->if_full_n(data2window_1_channe_full_n);
    data2window_1_channe_U->if_write(Loop_sliding_win_out_U0_data2window_1_write);
    data2window_1_channe_U->if_dout(data2window_1_channe_dout);
    data2window_1_channe_U->if_empty_n(data2window_1_channe_empty_n);
    data2window_1_channe_U->if_read(window_fn_U0_indata_1_V_read);
    data2window_0_channe_U = new fifo_w16_d2_A("data2window_0_channe_U");
    data2window_0_channe_U->clk(ap_clk);
    data2window_0_channe_U->reset(ap_rst_n_inv);
    data2window_0_channe_U->if_read_ce(ap_var_for_const0);
    data2window_0_channe_U->if_write_ce(ap_var_for_const0);
    data2window_0_channe_U->if_din(Loop_sliding_win_out_U0_data2window_0_din);
    data2window_0_channe_U->if_full_n(data2window_0_channe_full_n);
    data2window_0_channe_U->if_write(Loop_sliding_win_out_U0_data2window_0_write);
    data2window_0_channe_U->if_dout(data2window_0_channe_dout);
    data2window_0_channe_U->if_empty_n(data2window_0_channe_empty_n);
    data2window_0_channe_U->if_read(window_fn_U0_indata_0_V_read);
    windowed_0_channel_U = new fifo_w16_d2_A("windowed_0_channel_U");
    windowed_0_channel_U->clk(ap_clk);
    windowed_0_channel_U->reset(ap_rst_n_inv);
    windowed_0_channel_U->if_read_ce(ap_var_for_const0);
    windowed_0_channel_U->if_write_ce(ap_var_for_const0);
    windowed_0_channel_U->if_din(window_fn_U0_outdata_0_V_din);
    windowed_0_channel_U->if_full_n(windowed_0_channel_full_n);
    windowed_0_channel_U->if_write(window_fn_U0_outdata_0_V_write);
    windowed_0_channel_U->if_dout(windowed_0_channel_dout);
    windowed_0_channel_U->if_empty_n(windowed_0_channel_empty_n);
    windowed_0_channel_U->if_read(Loop_real2xfft_outpu_U0_windowed_0_read);
    windowed_1_channel_U = new fifo_w16_d2_A("windowed_1_channel_U");
    windowed_1_channel_U->clk(ap_clk);
    windowed_1_channel_U->reset(ap_rst_n_inv);
    windowed_1_channel_U->if_read_ce(ap_var_for_const0);
    windowed_1_channel_U->if_write_ce(ap_var_for_const0);
    windowed_1_channel_U->if_din(window_fn_U0_outdata_1_V_din);
    windowed_1_channel_U->if_full_n(windowed_1_channel_full_n);
    windowed_1_channel_U->if_write(window_fn_U0_outdata_1_V_write);
    windowed_1_channel_U->if_dout(windowed_1_channel_dout);
    windowed_1_channel_U->if_empty_n(windowed_1_channel_empty_n);
    windowed_1_channel_U->if_read(Loop_real2xfft_outpu_U0_windowed_1_read);
    start_for_Loop_slfYi_U = new start_for_Loop_slfYi("start_for_Loop_slfYi_U");
    start_for_Loop_slfYi_U->clk(ap_clk);
    start_for_Loop_slfYi_U->reset(ap_rst_n_inv);
    start_for_Loop_slfYi_U->if_read_ce(ap_var_for_const0);
    start_for_Loop_slfYi_U->if_write_ce(ap_var_for_const0);
    start_for_Loop_slfYi_U->if_din(start_for_Loop_sliding_win_out_U0_din);
    start_for_Loop_slfYi_U->if_full_n(start_for_Loop_sliding_win_out_U0_full_n);
    start_for_Loop_slfYi_U->if_write(Loop_sliding_win_del_U0_start_write);
    start_for_Loop_slfYi_U->if_dout(start_for_Loop_sliding_win_out_U0_dout);
    start_for_Loop_slfYi_U->if_empty_n(start_for_Loop_sliding_win_out_U0_empty_n);
    start_for_Loop_slfYi_U->if_read(Loop_sliding_win_out_U0_ap_ready);
    start_for_window_g8j_U = new start_for_window_g8j("start_for_window_g8j_U");
    start_for_window_g8j_U->clk(ap_clk);
    start_for_window_g8j_U->reset(ap_rst_n_inv);
    start_for_window_g8j_U->if_read_ce(ap_var_for_const0);
    start_for_window_g8j_U->if_write_ce(ap_var_for_const0);
    start_for_window_g8j_U->if_din(start_for_window_fn_U0_din);
    start_for_window_g8j_U->if_full_n(start_for_window_fn_U0_full_n);
    start_for_window_g8j_U->if_write(Loop_sliding_win_out_U0_start_write);
    start_for_window_g8j_U->if_dout(start_for_window_fn_U0_dout);
    start_for_window_g8j_U->if_empty_n(start_for_window_fn_U0_empty_n);
    start_for_window_g8j_U->if_read(window_fn_U0_ap_ready);
    start_for_Loop_rehbi_U = new start_for_Loop_rehbi("start_for_Loop_rehbi_U");
    start_for_Loop_rehbi_U->clk(ap_clk);
    start_for_Loop_rehbi_U->reset(ap_rst_n_inv);
    start_for_Loop_rehbi_U->if_read_ce(ap_var_for_const0);
    start_for_Loop_rehbi_U->if_write_ce(ap_var_for_const0);
    start_for_Loop_rehbi_U->if_din(start_for_Loop_real2xfft_outpu_U0_din);
    start_for_Loop_rehbi_U->if_full_n(start_for_Loop_real2xfft_outpu_U0_full_n);
    start_for_Loop_rehbi_U->if_write(window_fn_U0_start_write);
    start_for_Loop_rehbi_U->if_dout(start_for_Loop_real2xfft_outpu_U0_dout);
    start_for_Loop_rehbi_U->if_empty_n(start_for_Loop_real2xfft_outpu_U0_empty_n);
    start_for_Loop_rehbi_U->if_read(Loop_real2xfft_outpu_U0_ap_ready);

    SC_METHOD(thread_Loop_real2xfft_outpu_U0_ap_continue);

    SC_METHOD(thread_Loop_real2xfft_outpu_U0_ap_start);
    sensitive << ( start_for_Loop_real2xfft_outpu_U0_empty_n );

    SC_METHOD(thread_Loop_real2xfft_outpu_U0_start_full_n);

    SC_METHOD(thread_Loop_real2xfft_outpu_U0_start_write);

    SC_METHOD(thread_Loop_sliding_win_del_U0_ap_continue);

    SC_METHOD(thread_Loop_sliding_win_del_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_Loop_sliding_win_out_U0_ap_continue);

    SC_METHOD(thread_Loop_sliding_win_out_U0_ap_start);
    sensitive << ( start_for_Loop_sliding_win_out_U0_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( Loop_real2xfft_outpu_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Loop_sliding_win_del_U0_ap_idle );
    sensitive << ( Loop_sliding_win_out_U0_ap_idle );
    sensitive << ( window_fn_U0_ap_idle );
    sensitive << ( Loop_real2xfft_outpu_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( Loop_sliding_win_del_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Loop_real2xfft_outpu_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( Loop_sliding_win_del_U0_ap_ready );

    SC_METHOD(thread_din_V_V_TREADY);
    sensitive << ( Loop_sliding_win_del_U0_din_V_V_TREADY );

    SC_METHOD(thread_dout_TDATA);
    sensitive << ( Loop_real2xfft_outpu_U0_dout_TDATA );

    SC_METHOD(thread_dout_TLAST);
    sensitive << ( Loop_real2xfft_outpu_U0_dout_TLAST );

    SC_METHOD(thread_dout_TVALID);
    sensitive << ( Loop_real2xfft_outpu_U0_dout_TVALID );

    SC_METHOD(thread_start_for_Loop_real2xfft_outpu_U0_din);

    SC_METHOD(thread_start_for_Loop_sliding_win_out_U0_din);

    SC_METHOD(thread_start_for_window_fn_U0_din);

    SC_METHOD(thread_window_fn_U0_ap_continue);

    SC_METHOD(thread_window_fn_U0_ap_start);
    sensitive << ( start_for_window_fn_U0_empty_n );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_real2xfft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, din_V_V_TDATA, "(port)din_V_V_TDATA");
    sc_trace(mVcdFile, dout_TDATA, "(port)dout_TDATA");
    sc_trace(mVcdFile, dout_TLAST, "(port)dout_TLAST");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, din_V_V_TVALID, "(port)din_V_V_TVALID");
    sc_trace(mVcdFile, din_V_V_TREADY, "(port)din_V_V_TREADY");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, dout_TVALID, "(port)dout_TVALID");
    sc_trace(mVcdFile, dout_TREADY, "(port)dout_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_ap_start, "Loop_sliding_win_del_U0_ap_start");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_ap_done, "Loop_sliding_win_del_U0_ap_done");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_ap_continue, "Loop_sliding_win_del_U0_ap_continue");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_ap_idle, "Loop_sliding_win_del_U0_ap_idle");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_ap_ready, "Loop_sliding_win_del_U0_ap_ready");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_nodelay_i_0_din, "Loop_sliding_win_del_U0_nodelay_i_0_din");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_nodelay_i_0_write, "Loop_sliding_win_del_U0_nodelay_i_0_write");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_nodelay_i_1_din, "Loop_sliding_win_del_U0_nodelay_i_1_din");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_nodelay_i_1_write, "Loop_sliding_win_del_U0_nodelay_i_1_write");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_delayed_i_0_din, "Loop_sliding_win_del_U0_delayed_i_0_din");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_delayed_i_0_write, "Loop_sliding_win_del_U0_delayed_i_0_write");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_delayed_i_1_din, "Loop_sliding_win_del_U0_delayed_i_1_din");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_delayed_i_1_write, "Loop_sliding_win_del_U0_delayed_i_1_write");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_start_out, "Loop_sliding_win_del_U0_start_out");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_start_write, "Loop_sliding_win_del_U0_start_write");
    sc_trace(mVcdFile, Loop_sliding_win_del_U0_din_V_V_TREADY, "Loop_sliding_win_del_U0_din_V_V_TREADY");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_ap_start, "Loop_sliding_win_out_U0_ap_start");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_ap_done, "Loop_sliding_win_out_U0_ap_done");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_ap_continue, "Loop_sliding_win_out_U0_ap_continue");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_ap_idle, "Loop_sliding_win_out_U0_ap_idle");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_ap_ready, "Loop_sliding_win_out_U0_ap_ready");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_delayed_i_0_read, "Loop_sliding_win_out_U0_delayed_i_0_read");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_nodelay_i_0_read, "Loop_sliding_win_out_U0_nodelay_i_0_read");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_delayed_i_1_read, "Loop_sliding_win_out_U0_delayed_i_1_read");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_nodelay_i_1_read, "Loop_sliding_win_out_U0_nodelay_i_1_read");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_start_out, "Loop_sliding_win_out_U0_start_out");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_start_write, "Loop_sliding_win_out_U0_start_write");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_data2window_1_din, "Loop_sliding_win_out_U0_data2window_1_din");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_data2window_1_write, "Loop_sliding_win_out_U0_data2window_1_write");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_data2window_0_din, "Loop_sliding_win_out_U0_data2window_0_din");
    sc_trace(mVcdFile, Loop_sliding_win_out_U0_data2window_0_write, "Loop_sliding_win_out_U0_data2window_0_write");
    sc_trace(mVcdFile, window_fn_U0_ap_start, "window_fn_U0_ap_start");
    sc_trace(mVcdFile, window_fn_U0_ap_done, "window_fn_U0_ap_done");
    sc_trace(mVcdFile, window_fn_U0_ap_continue, "window_fn_U0_ap_continue");
    sc_trace(mVcdFile, window_fn_U0_ap_idle, "window_fn_U0_ap_idle");
    sc_trace(mVcdFile, window_fn_U0_ap_ready, "window_fn_U0_ap_ready");
    sc_trace(mVcdFile, window_fn_U0_indata_0_V_read, "window_fn_U0_indata_0_V_read");
    sc_trace(mVcdFile, window_fn_U0_indata_1_V_read, "window_fn_U0_indata_1_V_read");
    sc_trace(mVcdFile, window_fn_U0_start_out, "window_fn_U0_start_out");
    sc_trace(mVcdFile, window_fn_U0_start_write, "window_fn_U0_start_write");
    sc_trace(mVcdFile, window_fn_U0_outdata_0_V_din, "window_fn_U0_outdata_0_V_din");
    sc_trace(mVcdFile, window_fn_U0_outdata_0_V_write, "window_fn_U0_outdata_0_V_write");
    sc_trace(mVcdFile, window_fn_U0_outdata_1_V_din, "window_fn_U0_outdata_1_V_din");
    sc_trace(mVcdFile, window_fn_U0_outdata_1_V_write, "window_fn_U0_outdata_1_V_write");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_ap_start, "Loop_real2xfft_outpu_U0_ap_start");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_ap_done, "Loop_real2xfft_outpu_U0_ap_done");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_ap_continue, "Loop_real2xfft_outpu_U0_ap_continue");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_ap_idle, "Loop_real2xfft_outpu_U0_ap_idle");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_ap_ready, "Loop_real2xfft_outpu_U0_ap_ready");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_windowed_0_read, "Loop_real2xfft_outpu_U0_windowed_0_read");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_windowed_1_read, "Loop_real2xfft_outpu_U0_windowed_1_read");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_dout_TDATA, "Loop_real2xfft_outpu_U0_dout_TDATA");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_dout_TVALID, "Loop_real2xfft_outpu_U0_dout_TVALID");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_dout_TLAST, "Loop_real2xfft_outpu_U0_dout_TLAST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, delayed_i_0_channel_full_n, "delayed_i_0_channel_full_n");
    sc_trace(mVcdFile, delayed_i_0_channel_dout, "delayed_i_0_channel_dout");
    sc_trace(mVcdFile, delayed_i_0_channel_empty_n, "delayed_i_0_channel_empty_n");
    sc_trace(mVcdFile, delayed_i_1_channel_full_n, "delayed_i_1_channel_full_n");
    sc_trace(mVcdFile, delayed_i_1_channel_dout, "delayed_i_1_channel_dout");
    sc_trace(mVcdFile, delayed_i_1_channel_empty_n, "delayed_i_1_channel_empty_n");
    sc_trace(mVcdFile, nodelay_i_0_channel_full_n, "nodelay_i_0_channel_full_n");
    sc_trace(mVcdFile, nodelay_i_0_channel_dout, "nodelay_i_0_channel_dout");
    sc_trace(mVcdFile, nodelay_i_0_channel_empty_n, "nodelay_i_0_channel_empty_n");
    sc_trace(mVcdFile, nodelay_i_1_channel_full_n, "nodelay_i_1_channel_full_n");
    sc_trace(mVcdFile, nodelay_i_1_channel_dout, "nodelay_i_1_channel_dout");
    sc_trace(mVcdFile, nodelay_i_1_channel_empty_n, "nodelay_i_1_channel_empty_n");
    sc_trace(mVcdFile, data2window_1_channe_full_n, "data2window_1_channe_full_n");
    sc_trace(mVcdFile, data2window_1_channe_dout, "data2window_1_channe_dout");
    sc_trace(mVcdFile, data2window_1_channe_empty_n, "data2window_1_channe_empty_n");
    sc_trace(mVcdFile, data2window_0_channe_full_n, "data2window_0_channe_full_n");
    sc_trace(mVcdFile, data2window_0_channe_dout, "data2window_0_channe_dout");
    sc_trace(mVcdFile, data2window_0_channe_empty_n, "data2window_0_channe_empty_n");
    sc_trace(mVcdFile, windowed_0_channel_full_n, "windowed_0_channel_full_n");
    sc_trace(mVcdFile, windowed_0_channel_dout, "windowed_0_channel_dout");
    sc_trace(mVcdFile, windowed_0_channel_empty_n, "windowed_0_channel_empty_n");
    sc_trace(mVcdFile, windowed_1_channel_full_n, "windowed_1_channel_full_n");
    sc_trace(mVcdFile, windowed_1_channel_dout, "windowed_1_channel_dout");
    sc_trace(mVcdFile, windowed_1_channel_empty_n, "windowed_1_channel_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_Loop_sliding_win_out_U0_din, "start_for_Loop_sliding_win_out_U0_din");
    sc_trace(mVcdFile, start_for_Loop_sliding_win_out_U0_full_n, "start_for_Loop_sliding_win_out_U0_full_n");
    sc_trace(mVcdFile, start_for_Loop_sliding_win_out_U0_dout, "start_for_Loop_sliding_win_out_U0_dout");
    sc_trace(mVcdFile, start_for_Loop_sliding_win_out_U0_empty_n, "start_for_Loop_sliding_win_out_U0_empty_n");
    sc_trace(mVcdFile, start_for_window_fn_U0_din, "start_for_window_fn_U0_din");
    sc_trace(mVcdFile, start_for_window_fn_U0_full_n, "start_for_window_fn_U0_full_n");
    sc_trace(mVcdFile, start_for_window_fn_U0_dout, "start_for_window_fn_U0_dout");
    sc_trace(mVcdFile, start_for_window_fn_U0_empty_n, "start_for_window_fn_U0_empty_n");
    sc_trace(mVcdFile, start_for_Loop_real2xfft_outpu_U0_din, "start_for_Loop_real2xfft_outpu_U0_din");
    sc_trace(mVcdFile, start_for_Loop_real2xfft_outpu_U0_full_n, "start_for_Loop_real2xfft_outpu_U0_full_n");
    sc_trace(mVcdFile, start_for_Loop_real2xfft_outpu_U0_dout, "start_for_Loop_real2xfft_outpu_U0_dout");
    sc_trace(mVcdFile, start_for_Loop_real2xfft_outpu_U0_empty_n, "start_for_Loop_real2xfft_outpu_U0_empty_n");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_start_full_n, "Loop_real2xfft_outpu_U0_start_full_n");
    sc_trace(mVcdFile, Loop_real2xfft_outpu_U0_start_write, "Loop_real2xfft_outpu_U0_start_write");
#endif

    }
    mHdltvinHandle.open("hls_real2xfft.hdltvin.dat");
    mHdltvoutHandle.open("hls_real2xfft.hdltvout.dat");
}

hls_real2xfft::~hls_real2xfft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Loop_sliding_win_del_U0;
    delete Loop_sliding_win_out_U0;
    delete window_fn_U0;
    delete Loop_real2xfft_outpu_U0;
    delete delayed_i_0_channel_U;
    delete delayed_i_1_channel_U;
    delete nodelay_i_0_channel_U;
    delete nodelay_i_1_channel_U;
    delete data2window_1_channe_U;
    delete data2window_0_channe_U;
    delete windowed_0_channel_U;
    delete windowed_1_channel_U;
    delete start_for_Loop_slfYi_U;
    delete start_for_window_g8j_U;
    delete start_for_Loop_rehbi_U;
}

void hls_real2xfft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void hls_real2xfft::thread_Loop_real2xfft_outpu_U0_ap_continue() {
    Loop_real2xfft_outpu_U0_ap_continue = ap_const_logic_1;
}

void hls_real2xfft::thread_Loop_real2xfft_outpu_U0_ap_start() {
    Loop_real2xfft_outpu_U0_ap_start = start_for_Loop_real2xfft_outpu_U0_empty_n.read();
}

void hls_real2xfft::thread_Loop_real2xfft_outpu_U0_start_full_n() {
    Loop_real2xfft_outpu_U0_start_full_n = ap_const_logic_1;
}

void hls_real2xfft::thread_Loop_real2xfft_outpu_U0_start_write() {
    Loop_real2xfft_outpu_U0_start_write = ap_const_logic_0;
}

void hls_real2xfft::thread_Loop_sliding_win_del_U0_ap_continue() {
    Loop_sliding_win_del_U0_ap_continue = ap_const_logic_1;
}

void hls_real2xfft::thread_Loop_sliding_win_del_U0_ap_start() {
    Loop_sliding_win_del_U0_ap_start = ap_start.read();
}

void hls_real2xfft::thread_Loop_sliding_win_out_U0_ap_continue() {
    Loop_sliding_win_out_U0_ap_continue = ap_const_logic_1;
}

void hls_real2xfft::thread_Loop_sliding_win_out_U0_ap_start() {
    Loop_sliding_win_out_U0_ap_start = start_for_Loop_sliding_win_out_U0_empty_n.read();
}

void hls_real2xfft::thread_ap_done() {
    ap_done = Loop_real2xfft_outpu_U0_ap_done.read();
}

void hls_real2xfft::thread_ap_idle() {
    ap_idle = (Loop_sliding_win_del_U0_ap_idle.read() & Loop_sliding_win_out_U0_ap_idle.read() & window_fn_U0_ap_idle.read() & Loop_real2xfft_outpu_U0_ap_idle.read());
}

void hls_real2xfft::thread_ap_ready() {
    ap_ready = Loop_sliding_win_del_U0_ap_ready.read();
}

void hls_real2xfft::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void hls_real2xfft::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void hls_real2xfft::thread_ap_sync_done() {
    ap_sync_done = Loop_real2xfft_outpu_U0_ap_done.read();
}

void hls_real2xfft::thread_ap_sync_ready() {
    ap_sync_ready = Loop_sliding_win_del_U0_ap_ready.read();
}

void hls_real2xfft::thread_din_V_V_TREADY() {
    din_V_V_TREADY = Loop_sliding_win_del_U0_din_V_V_TREADY.read();
}

void hls_real2xfft::thread_dout_TDATA() {
    dout_TDATA = Loop_real2xfft_outpu_U0_dout_TDATA.read();
}

void hls_real2xfft::thread_dout_TLAST() {
    dout_TLAST = Loop_real2xfft_outpu_U0_dout_TLAST.read();
}

void hls_real2xfft::thread_dout_TVALID() {
    dout_TVALID = Loop_real2xfft_outpu_U0_dout_TVALID.read();
}

void hls_real2xfft::thread_start_for_Loop_real2xfft_outpu_U0_din() {
    start_for_Loop_real2xfft_outpu_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_real2xfft::thread_start_for_Loop_sliding_win_out_U0_din() {
    start_for_Loop_sliding_win_out_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_real2xfft::thread_start_for_window_fn_U0_din() {
    start_for_window_fn_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_real2xfft::thread_window_fn_U0_ap_continue() {
    window_fn_U0_ap_continue = ap_const_logic_1;
}

void hls_real2xfft::thread_window_fn_U0_ap_start() {
    window_fn_U0_ap_start = start_for_window_fn_U0_empty_n.read();
}

void hls_real2xfft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"din_V_V_TDATA\" :  \"" << din_V_V_TDATA.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"dout_TDATA\" :  \"" << dout_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout_TLAST\" :  \"" << dout_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"din_V_V_TVALID\" :  \"" << din_V_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"din_V_V_TREADY\" :  \"" << din_V_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout_TVALID\" :  \"" << dout_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dout_TREADY\" :  \"" << dout_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

