-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_real2xfft is
port (
    din_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    dout_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    din_V_V_TVALID : IN STD_LOGIC;
    din_V_V_TREADY : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    dout_TVALID : OUT STD_LOGIC;
    dout_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of hls_real2xfft is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_real2xfft,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.890000,HLS_SYN_LAT=1032,HLS_SYN_TPT=1024,HLS_SYN_MEM=6,HLS_SYN_DSP=2,HLS_SYN_FF=648,HLS_SYN_LUT=1165,HLS_VERSION=2020_1}";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Loop_sliding_win_del_U0_ap_start : STD_LOGIC;
    signal Loop_sliding_win_del_U0_ap_done : STD_LOGIC;
    signal Loop_sliding_win_del_U0_ap_continue : STD_LOGIC;
    signal Loop_sliding_win_del_U0_ap_idle : STD_LOGIC;
    signal Loop_sliding_win_del_U0_ap_ready : STD_LOGIC;
    signal Loop_sliding_win_del_U0_nodelay_i_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_sliding_win_del_U0_nodelay_i_0_write : STD_LOGIC;
    signal Loop_sliding_win_del_U0_nodelay_i_1_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_sliding_win_del_U0_nodelay_i_1_write : STD_LOGIC;
    signal Loop_sliding_win_del_U0_delayed_i_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_sliding_win_del_U0_delayed_i_0_write : STD_LOGIC;
    signal Loop_sliding_win_del_U0_delayed_i_1_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_sliding_win_del_U0_delayed_i_1_write : STD_LOGIC;
    signal Loop_sliding_win_del_U0_start_out : STD_LOGIC;
    signal Loop_sliding_win_del_U0_start_write : STD_LOGIC;
    signal Loop_sliding_win_del_U0_din_V_V_TREADY : STD_LOGIC;
    signal Loop_sliding_win_out_U0_ap_start : STD_LOGIC;
    signal Loop_sliding_win_out_U0_ap_done : STD_LOGIC;
    signal Loop_sliding_win_out_U0_ap_continue : STD_LOGIC;
    signal Loop_sliding_win_out_U0_ap_idle : STD_LOGIC;
    signal Loop_sliding_win_out_U0_ap_ready : STD_LOGIC;
    signal Loop_sliding_win_out_U0_delayed_i_0_read : STD_LOGIC;
    signal Loop_sliding_win_out_U0_nodelay_i_0_read : STD_LOGIC;
    signal Loop_sliding_win_out_U0_delayed_i_1_read : STD_LOGIC;
    signal Loop_sliding_win_out_U0_nodelay_i_1_read : STD_LOGIC;
    signal Loop_sliding_win_out_U0_start_out : STD_LOGIC;
    signal Loop_sliding_win_out_U0_start_write : STD_LOGIC;
    signal Loop_sliding_win_out_U0_data2window_1_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_sliding_win_out_U0_data2window_1_write : STD_LOGIC;
    signal Loop_sliding_win_out_U0_data2window_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_sliding_win_out_U0_data2window_0_write : STD_LOGIC;
    signal window_fn_U0_ap_start : STD_LOGIC;
    signal window_fn_U0_ap_done : STD_LOGIC;
    signal window_fn_U0_ap_continue : STD_LOGIC;
    signal window_fn_U0_ap_idle : STD_LOGIC;
    signal window_fn_U0_ap_ready : STD_LOGIC;
    signal window_fn_U0_indata_0_V_read : STD_LOGIC;
    signal window_fn_U0_indata_1_V_read : STD_LOGIC;
    signal window_fn_U0_start_out : STD_LOGIC;
    signal window_fn_U0_start_write : STD_LOGIC;
    signal window_fn_U0_outdata_0_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal window_fn_U0_outdata_0_V_write : STD_LOGIC;
    signal window_fn_U0_outdata_1_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal window_fn_U0_outdata_1_V_write : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_ap_start : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_ap_done : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_ap_continue : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_ap_idle : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_ap_ready : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_windowed_0_read : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_windowed_1_read : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_dout_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_real2xfft_outpu_U0_dout_TVALID : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_dout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal delayed_i_0_channel_full_n : STD_LOGIC;
    signal delayed_i_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal delayed_i_0_channel_empty_n : STD_LOGIC;
    signal delayed_i_1_channel_full_n : STD_LOGIC;
    signal delayed_i_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal delayed_i_1_channel_empty_n : STD_LOGIC;
    signal nodelay_i_0_channel_full_n : STD_LOGIC;
    signal nodelay_i_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal nodelay_i_0_channel_empty_n : STD_LOGIC;
    signal nodelay_i_1_channel_full_n : STD_LOGIC;
    signal nodelay_i_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal nodelay_i_1_channel_empty_n : STD_LOGIC;
    signal data2window_1_channe_full_n : STD_LOGIC;
    signal data2window_1_channe_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data2window_1_channe_empty_n : STD_LOGIC;
    signal data2window_0_channe_full_n : STD_LOGIC;
    signal data2window_0_channe_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data2window_0_channe_empty_n : STD_LOGIC;
    signal windowed_0_channel_full_n : STD_LOGIC;
    signal windowed_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal windowed_0_channel_empty_n : STD_LOGIC;
    signal windowed_1_channel_full_n : STD_LOGIC;
    signal windowed_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal windowed_1_channel_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_Loop_sliding_win_out_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_sliding_win_out_U0_full_n : STD_LOGIC;
    signal start_for_Loop_sliding_win_out_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_sliding_win_out_U0_empty_n : STD_LOGIC;
    signal start_for_window_fn_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_window_fn_U0_full_n : STD_LOGIC;
    signal start_for_window_fn_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_window_fn_U0_empty_n : STD_LOGIC;
    signal start_for_Loop_real2xfft_outpu_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_real2xfft_outpu_U0_full_n : STD_LOGIC;
    signal start_for_Loop_real2xfft_outpu_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_real2xfft_outpu_U0_empty_n : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_start_full_n : STD_LOGIC;
    signal Loop_real2xfft_outpu_U0_start_write : STD_LOGIC;

    component Loop_sliding_win_del IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        din_V_V_TVALID : IN STD_LOGIC;
        nodelay_i_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_0_full_n : IN STD_LOGIC;
        nodelay_i_0_write : OUT STD_LOGIC;
        nodelay_i_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_1_full_n : IN STD_LOGIC;
        nodelay_i_1_write : OUT STD_LOGIC;
        delayed_i_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_0_full_n : IN STD_LOGIC;
        delayed_i_0_write : OUT STD_LOGIC;
        delayed_i_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_1_full_n : IN STD_LOGIC;
        delayed_i_1_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        din_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        din_V_V_TREADY : OUT STD_LOGIC );
    end component;


    component Loop_sliding_win_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        delayed_i_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_0_empty_n : IN STD_LOGIC;
        delayed_i_0_read : OUT STD_LOGIC;
        nodelay_i_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_0_empty_n : IN STD_LOGIC;
        nodelay_i_0_read : OUT STD_LOGIC;
        delayed_i_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_1_empty_n : IN STD_LOGIC;
        delayed_i_1_read : OUT STD_LOGIC;
        nodelay_i_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_1_empty_n : IN STD_LOGIC;
        nodelay_i_1_read : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        data2window_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        data2window_1_full_n : IN STD_LOGIC;
        data2window_1_write : OUT STD_LOGIC;
        data2window_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        data2window_0_full_n : IN STD_LOGIC;
        data2window_0_write : OUT STD_LOGIC );
    end component;


    component window_fn IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indata_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        indata_0_V_empty_n : IN STD_LOGIC;
        indata_0_V_read : OUT STD_LOGIC;
        indata_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        indata_1_V_empty_n : IN STD_LOGIC;
        indata_1_V_read : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        outdata_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outdata_0_V_full_n : IN STD_LOGIC;
        outdata_0_V_write : OUT STD_LOGIC;
        outdata_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outdata_1_V_full_n : IN STD_LOGIC;
        outdata_1_V_write : OUT STD_LOGIC );
    end component;


    component Loop_real2xfft_outpu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        windowed_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        windowed_0_empty_n : IN STD_LOGIC;
        windowed_0_read : OUT STD_LOGIC;
        windowed_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        windowed_1_empty_n : IN STD_LOGIC;
        windowed_1_read : OUT STD_LOGIC;
        dout_TREADY : IN STD_LOGIC;
        dout_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        dout_TVALID : OUT STD_LOGIC;
        dout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w16_d256_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d512_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_slfYi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_window_g8j IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_rehbi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Loop_sliding_win_del_U0 : component Loop_sliding_win_del
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_sliding_win_del_U0_ap_start,
        start_full_n => start_for_Loop_sliding_win_out_U0_full_n,
        ap_done => Loop_sliding_win_del_U0_ap_done,
        ap_continue => Loop_sliding_win_del_U0_ap_continue,
        ap_idle => Loop_sliding_win_del_U0_ap_idle,
        ap_ready => Loop_sliding_win_del_U0_ap_ready,
        din_V_V_TVALID => din_V_V_TVALID,
        nodelay_i_0_din => Loop_sliding_win_del_U0_nodelay_i_0_din,
        nodelay_i_0_full_n => nodelay_i_0_channel_full_n,
        nodelay_i_0_write => Loop_sliding_win_del_U0_nodelay_i_0_write,
        nodelay_i_1_din => Loop_sliding_win_del_U0_nodelay_i_1_din,
        nodelay_i_1_full_n => nodelay_i_1_channel_full_n,
        nodelay_i_1_write => Loop_sliding_win_del_U0_nodelay_i_1_write,
        delayed_i_0_din => Loop_sliding_win_del_U0_delayed_i_0_din,
        delayed_i_0_full_n => delayed_i_0_channel_full_n,
        delayed_i_0_write => Loop_sliding_win_del_U0_delayed_i_0_write,
        delayed_i_1_din => Loop_sliding_win_del_U0_delayed_i_1_din,
        delayed_i_1_full_n => delayed_i_1_channel_full_n,
        delayed_i_1_write => Loop_sliding_win_del_U0_delayed_i_1_write,
        start_out => Loop_sliding_win_del_U0_start_out,
        start_write => Loop_sliding_win_del_U0_start_write,
        din_V_V_TDATA => din_V_V_TDATA,
        din_V_V_TREADY => Loop_sliding_win_del_U0_din_V_V_TREADY);

    Loop_sliding_win_out_U0 : component Loop_sliding_win_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_sliding_win_out_U0_ap_start,
        start_full_n => start_for_window_fn_U0_full_n,
        ap_done => Loop_sliding_win_out_U0_ap_done,
        ap_continue => Loop_sliding_win_out_U0_ap_continue,
        ap_idle => Loop_sliding_win_out_U0_ap_idle,
        ap_ready => Loop_sliding_win_out_U0_ap_ready,
        delayed_i_0_dout => delayed_i_0_channel_dout,
        delayed_i_0_empty_n => delayed_i_0_channel_empty_n,
        delayed_i_0_read => Loop_sliding_win_out_U0_delayed_i_0_read,
        nodelay_i_0_dout => nodelay_i_0_channel_dout,
        nodelay_i_0_empty_n => nodelay_i_0_channel_empty_n,
        nodelay_i_0_read => Loop_sliding_win_out_U0_nodelay_i_0_read,
        delayed_i_1_dout => delayed_i_1_channel_dout,
        delayed_i_1_empty_n => delayed_i_1_channel_empty_n,
        delayed_i_1_read => Loop_sliding_win_out_U0_delayed_i_1_read,
        nodelay_i_1_dout => nodelay_i_1_channel_dout,
        nodelay_i_1_empty_n => nodelay_i_1_channel_empty_n,
        nodelay_i_1_read => Loop_sliding_win_out_U0_nodelay_i_1_read,
        start_out => Loop_sliding_win_out_U0_start_out,
        start_write => Loop_sliding_win_out_U0_start_write,
        data2window_1_din => Loop_sliding_win_out_U0_data2window_1_din,
        data2window_1_full_n => data2window_1_channe_full_n,
        data2window_1_write => Loop_sliding_win_out_U0_data2window_1_write,
        data2window_0_din => Loop_sliding_win_out_U0_data2window_0_din,
        data2window_0_full_n => data2window_0_channe_full_n,
        data2window_0_write => Loop_sliding_win_out_U0_data2window_0_write);

    window_fn_U0 : component window_fn
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => window_fn_U0_ap_start,
        start_full_n => start_for_Loop_real2xfft_outpu_U0_full_n,
        ap_done => window_fn_U0_ap_done,
        ap_continue => window_fn_U0_ap_continue,
        ap_idle => window_fn_U0_ap_idle,
        ap_ready => window_fn_U0_ap_ready,
        indata_0_V_dout => data2window_0_channe_dout,
        indata_0_V_empty_n => data2window_0_channe_empty_n,
        indata_0_V_read => window_fn_U0_indata_0_V_read,
        indata_1_V_dout => data2window_1_channe_dout,
        indata_1_V_empty_n => data2window_1_channe_empty_n,
        indata_1_V_read => window_fn_U0_indata_1_V_read,
        start_out => window_fn_U0_start_out,
        start_write => window_fn_U0_start_write,
        outdata_0_V_din => window_fn_U0_outdata_0_V_din,
        outdata_0_V_full_n => windowed_0_channel_full_n,
        outdata_0_V_write => window_fn_U0_outdata_0_V_write,
        outdata_1_V_din => window_fn_U0_outdata_1_V_din,
        outdata_1_V_full_n => windowed_1_channel_full_n,
        outdata_1_V_write => window_fn_U0_outdata_1_V_write);

    Loop_real2xfft_outpu_U0 : component Loop_real2xfft_outpu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_real2xfft_outpu_U0_ap_start,
        ap_done => Loop_real2xfft_outpu_U0_ap_done,
        ap_continue => Loop_real2xfft_outpu_U0_ap_continue,
        ap_idle => Loop_real2xfft_outpu_U0_ap_idle,
        ap_ready => Loop_real2xfft_outpu_U0_ap_ready,
        windowed_0_dout => windowed_0_channel_dout,
        windowed_0_empty_n => windowed_0_channel_empty_n,
        windowed_0_read => Loop_real2xfft_outpu_U0_windowed_0_read,
        windowed_1_dout => windowed_1_channel_dout,
        windowed_1_empty_n => windowed_1_channel_empty_n,
        windowed_1_read => Loop_real2xfft_outpu_U0_windowed_1_read,
        dout_TREADY => dout_TREADY,
        dout_TDATA => Loop_real2xfft_outpu_U0_dout_TDATA,
        dout_TVALID => Loop_real2xfft_outpu_U0_dout_TVALID,
        dout_TLAST => Loop_real2xfft_outpu_U0_dout_TLAST);

    delayed_i_0_channel_U : component fifo_w16_d256_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_sliding_win_del_U0_delayed_i_0_din,
        if_full_n => delayed_i_0_channel_full_n,
        if_write => Loop_sliding_win_del_U0_delayed_i_0_write,
        if_dout => delayed_i_0_channel_dout,
        if_empty_n => delayed_i_0_channel_empty_n,
        if_read => Loop_sliding_win_out_U0_delayed_i_0_read);

    delayed_i_1_channel_U : component fifo_w16_d256_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_sliding_win_del_U0_delayed_i_1_din,
        if_full_n => delayed_i_1_channel_full_n,
        if_write => Loop_sliding_win_del_U0_delayed_i_1_write,
        if_dout => delayed_i_1_channel_dout,
        if_empty_n => delayed_i_1_channel_empty_n,
        if_read => Loop_sliding_win_out_U0_delayed_i_1_read);

    nodelay_i_0_channel_U : component fifo_w16_d512_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_sliding_win_del_U0_nodelay_i_0_din,
        if_full_n => nodelay_i_0_channel_full_n,
        if_write => Loop_sliding_win_del_U0_nodelay_i_0_write,
        if_dout => nodelay_i_0_channel_dout,
        if_empty_n => nodelay_i_0_channel_empty_n,
        if_read => Loop_sliding_win_out_U0_nodelay_i_0_read);

    nodelay_i_1_channel_U : component fifo_w16_d512_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_sliding_win_del_U0_nodelay_i_1_din,
        if_full_n => nodelay_i_1_channel_full_n,
        if_write => Loop_sliding_win_del_U0_nodelay_i_1_write,
        if_dout => nodelay_i_1_channel_dout,
        if_empty_n => nodelay_i_1_channel_empty_n,
        if_read => Loop_sliding_win_out_U0_nodelay_i_1_read);

    data2window_1_channe_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_sliding_win_out_U0_data2window_1_din,
        if_full_n => data2window_1_channe_full_n,
        if_write => Loop_sliding_win_out_U0_data2window_1_write,
        if_dout => data2window_1_channe_dout,
        if_empty_n => data2window_1_channe_empty_n,
        if_read => window_fn_U0_indata_1_V_read);

    data2window_0_channe_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_sliding_win_out_U0_data2window_0_din,
        if_full_n => data2window_0_channe_full_n,
        if_write => Loop_sliding_win_out_U0_data2window_0_write,
        if_dout => data2window_0_channe_dout,
        if_empty_n => data2window_0_channe_empty_n,
        if_read => window_fn_U0_indata_0_V_read);

    windowed_0_channel_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => window_fn_U0_outdata_0_V_din,
        if_full_n => windowed_0_channel_full_n,
        if_write => window_fn_U0_outdata_0_V_write,
        if_dout => windowed_0_channel_dout,
        if_empty_n => windowed_0_channel_empty_n,
        if_read => Loop_real2xfft_outpu_U0_windowed_0_read);

    windowed_1_channel_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => window_fn_U0_outdata_1_V_din,
        if_full_n => windowed_1_channel_full_n,
        if_write => window_fn_U0_outdata_1_V_write,
        if_dout => windowed_1_channel_dout,
        if_empty_n => windowed_1_channel_empty_n,
        if_read => Loop_real2xfft_outpu_U0_windowed_1_read);

    start_for_Loop_slfYi_U : component start_for_Loop_slfYi
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_sliding_win_out_U0_din,
        if_full_n => start_for_Loop_sliding_win_out_U0_full_n,
        if_write => Loop_sliding_win_del_U0_start_write,
        if_dout => start_for_Loop_sliding_win_out_U0_dout,
        if_empty_n => start_for_Loop_sliding_win_out_U0_empty_n,
        if_read => Loop_sliding_win_out_U0_ap_ready);

    start_for_window_g8j_U : component start_for_window_g8j
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_window_fn_U0_din,
        if_full_n => start_for_window_fn_U0_full_n,
        if_write => Loop_sliding_win_out_U0_start_write,
        if_dout => start_for_window_fn_U0_dout,
        if_empty_n => start_for_window_fn_U0_empty_n,
        if_read => window_fn_U0_ap_ready);

    start_for_Loop_rehbi_U : component start_for_Loop_rehbi
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_real2xfft_outpu_U0_din,
        if_full_n => start_for_Loop_real2xfft_outpu_U0_full_n,
        if_write => window_fn_U0_start_write,
        if_dout => start_for_Loop_real2xfft_outpu_U0_dout,
        if_empty_n => start_for_Loop_real2xfft_outpu_U0_empty_n,
        if_read => Loop_real2xfft_outpu_U0_ap_ready);




    Loop_real2xfft_outpu_U0_ap_continue <= ap_const_logic_1;
    Loop_real2xfft_outpu_U0_ap_start <= start_for_Loop_real2xfft_outpu_U0_empty_n;
    Loop_real2xfft_outpu_U0_start_full_n <= ap_const_logic_1;
    Loop_real2xfft_outpu_U0_start_write <= ap_const_logic_0;
    Loop_sliding_win_del_U0_ap_continue <= ap_const_logic_1;
    Loop_sliding_win_del_U0_ap_start <= ap_start;
    Loop_sliding_win_out_U0_ap_continue <= ap_const_logic_1;
    Loop_sliding_win_out_U0_ap_start <= start_for_Loop_sliding_win_out_U0_empty_n;
    ap_done <= Loop_real2xfft_outpu_U0_ap_done;
    ap_idle <= (window_fn_U0_ap_idle and Loop_sliding_win_out_U0_ap_idle and Loop_sliding_win_del_U0_ap_idle and Loop_real2xfft_outpu_U0_ap_idle);
    ap_ready <= Loop_sliding_win_del_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Loop_real2xfft_outpu_U0_ap_done;
    ap_sync_ready <= Loop_sliding_win_del_U0_ap_ready;
    din_V_V_TREADY <= Loop_sliding_win_del_U0_din_V_V_TREADY;
    dout_TDATA <= Loop_real2xfft_outpu_U0_dout_TDATA;
    dout_TLAST <= Loop_real2xfft_outpu_U0_dout_TLAST;
    dout_TVALID <= Loop_real2xfft_outpu_U0_dout_TVALID;
    start_for_Loop_real2xfft_outpu_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_sliding_win_out_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_window_fn_U0_din <= (0=>ap_const_logic_1, others=>'-');
    window_fn_U0_ap_continue <= ap_const_logic_1;
    window_fn_U0_ap_start <= start_for_window_fn_U0_empty_n;
end behav;
