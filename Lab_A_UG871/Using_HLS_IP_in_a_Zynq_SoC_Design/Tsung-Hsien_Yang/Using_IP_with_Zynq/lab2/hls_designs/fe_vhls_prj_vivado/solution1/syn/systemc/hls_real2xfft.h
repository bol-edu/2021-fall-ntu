// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_real2xfft_HH_
#define _hls_real2xfft_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Loop_sliding_win_del.h"
#include "Loop_sliding_win_out.h"
#include "window_fn.h"
#include "Loop_real2xfft_outpu.h"
#include "fifo_w16_d256_A.h"
#include "fifo_w16_d512_A.h"
#include "fifo_w16_d2_A.h"
#include "start_for_Loop_slfYi.h"
#include "start_for_window_g8j.h"
#include "start_for_Loop_rehbi.h"

namespace ap_rtl {

struct hls_real2xfft : public sc_module {
    // Port declarations 13
    sc_in< sc_lv<16> > din_V_V_TDATA;
    sc_out< sc_lv<32> > dout_TDATA;
    sc_out< sc_lv<1> > dout_TLAST;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > din_V_V_TVALID;
    sc_out< sc_logic > din_V_V_TREADY;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > dout_TVALID;
    sc_in< sc_logic > dout_TREADY;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    hls_real2xfft(sc_module_name name);
    SC_HAS_PROCESS(hls_real2xfft);

    ~hls_real2xfft();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Loop_sliding_win_del* Loop_sliding_win_del_U0;
    Loop_sliding_win_out* Loop_sliding_win_out_U0;
    window_fn* window_fn_U0;
    Loop_real2xfft_outpu* Loop_real2xfft_outpu_U0;
    fifo_w16_d256_A* delayed_i_0_channel_U;
    fifo_w16_d256_A* delayed_i_1_channel_U;
    fifo_w16_d512_A* nodelay_i_0_channel_U;
    fifo_w16_d512_A* nodelay_i_1_channel_U;
    fifo_w16_d2_A* data2window_1_channe_U;
    fifo_w16_d2_A* data2window_0_channe_U;
    fifo_w16_d2_A* windowed_0_channel_U;
    fifo_w16_d2_A* windowed_1_channel_U;
    start_for_Loop_slfYi* start_for_Loop_slfYi_U;
    start_for_window_g8j* start_for_window_g8j_U;
    start_for_Loop_rehbi* start_for_Loop_rehbi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_ap_start;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_ap_done;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_ap_continue;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_ap_idle;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_ap_ready;
    sc_signal< sc_lv<16> > Loop_sliding_win_del_U0_nodelay_i_0_din;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_nodelay_i_0_write;
    sc_signal< sc_lv<16> > Loop_sliding_win_del_U0_nodelay_i_1_din;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_nodelay_i_1_write;
    sc_signal< sc_lv<16> > Loop_sliding_win_del_U0_delayed_i_0_din;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_delayed_i_0_write;
    sc_signal< sc_lv<16> > Loop_sliding_win_del_U0_delayed_i_1_din;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_delayed_i_1_write;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_start_out;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_start_write;
    sc_signal< sc_logic > Loop_sliding_win_del_U0_din_V_V_TREADY;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_ap_start;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_ap_done;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_ap_continue;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_ap_idle;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_ap_ready;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_delayed_i_0_read;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_nodelay_i_0_read;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_delayed_i_1_read;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_nodelay_i_1_read;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_start_out;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_start_write;
    sc_signal< sc_lv<16> > Loop_sliding_win_out_U0_data2window_1_din;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_data2window_1_write;
    sc_signal< sc_lv<16> > Loop_sliding_win_out_U0_data2window_0_din;
    sc_signal< sc_logic > Loop_sliding_win_out_U0_data2window_0_write;
    sc_signal< sc_logic > window_fn_U0_ap_start;
    sc_signal< sc_logic > window_fn_U0_ap_done;
    sc_signal< sc_logic > window_fn_U0_ap_continue;
    sc_signal< sc_logic > window_fn_U0_ap_idle;
    sc_signal< sc_logic > window_fn_U0_ap_ready;
    sc_signal< sc_logic > window_fn_U0_indata_0_V_read;
    sc_signal< sc_logic > window_fn_U0_indata_1_V_read;
    sc_signal< sc_logic > window_fn_U0_start_out;
    sc_signal< sc_logic > window_fn_U0_start_write;
    sc_signal< sc_lv<16> > window_fn_U0_outdata_0_V_din;
    sc_signal< sc_logic > window_fn_U0_outdata_0_V_write;
    sc_signal< sc_lv<16> > window_fn_U0_outdata_1_V_din;
    sc_signal< sc_logic > window_fn_U0_outdata_1_V_write;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_ap_start;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_ap_done;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_ap_continue;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_ap_idle;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_ap_ready;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_windowed_0_read;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_windowed_1_read;
    sc_signal< sc_lv<32> > Loop_real2xfft_outpu_U0_dout_TDATA;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_dout_TVALID;
    sc_signal< sc_lv<1> > Loop_real2xfft_outpu_U0_dout_TLAST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > delayed_i_0_channel_full_n;
    sc_signal< sc_lv<16> > delayed_i_0_channel_dout;
    sc_signal< sc_logic > delayed_i_0_channel_empty_n;
    sc_signal< sc_logic > delayed_i_1_channel_full_n;
    sc_signal< sc_lv<16> > delayed_i_1_channel_dout;
    sc_signal< sc_logic > delayed_i_1_channel_empty_n;
    sc_signal< sc_logic > nodelay_i_0_channel_full_n;
    sc_signal< sc_lv<16> > nodelay_i_0_channel_dout;
    sc_signal< sc_logic > nodelay_i_0_channel_empty_n;
    sc_signal< sc_logic > nodelay_i_1_channel_full_n;
    sc_signal< sc_lv<16> > nodelay_i_1_channel_dout;
    sc_signal< sc_logic > nodelay_i_1_channel_empty_n;
    sc_signal< sc_logic > data2window_1_channe_full_n;
    sc_signal< sc_lv<16> > data2window_1_channe_dout;
    sc_signal< sc_logic > data2window_1_channe_empty_n;
    sc_signal< sc_logic > data2window_0_channe_full_n;
    sc_signal< sc_lv<16> > data2window_0_channe_dout;
    sc_signal< sc_logic > data2window_0_channe_empty_n;
    sc_signal< sc_logic > windowed_0_channel_full_n;
    sc_signal< sc_lv<16> > windowed_0_channel_dout;
    sc_signal< sc_logic > windowed_0_channel_empty_n;
    sc_signal< sc_logic > windowed_1_channel_full_n;
    sc_signal< sc_lv<16> > windowed_1_channel_dout;
    sc_signal< sc_logic > windowed_1_channel_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_Loop_sliding_win_out_U0_din;
    sc_signal< sc_logic > start_for_Loop_sliding_win_out_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Loop_sliding_win_out_U0_dout;
    sc_signal< sc_logic > start_for_Loop_sliding_win_out_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_window_fn_U0_din;
    sc_signal< sc_logic > start_for_window_fn_U0_full_n;
    sc_signal< sc_lv<1> > start_for_window_fn_U0_dout;
    sc_signal< sc_logic > start_for_window_fn_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Loop_real2xfft_outpu_U0_din;
    sc_signal< sc_logic > start_for_Loop_real2xfft_outpu_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Loop_real2xfft_outpu_U0_dout;
    sc_signal< sc_logic > start_for_Loop_real2xfft_outpu_U0_empty_n;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_start_full_n;
    sc_signal< sc_logic > Loop_real2xfft_outpu_U0_start_write;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_Loop_real2xfft_outpu_U0_ap_continue();
    void thread_Loop_real2xfft_outpu_U0_ap_start();
    void thread_Loop_real2xfft_outpu_U0_start_full_n();
    void thread_Loop_real2xfft_outpu_U0_start_write();
    void thread_Loop_sliding_win_del_U0_ap_continue();
    void thread_Loop_sliding_win_del_U0_ap_start();
    void thread_Loop_sliding_win_out_U0_ap_continue();
    void thread_Loop_sliding_win_out_U0_ap_start();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_din_V_V_TREADY();
    void thread_dout_TDATA();
    void thread_dout_TLAST();
    void thread_dout_TVALID();
    void thread_start_for_Loop_real2xfft_outpu_U0_din();
    void thread_start_for_Loop_sliding_win_out_U0_din();
    void thread_start_for_window_fn_U0_din();
    void thread_window_fn_U0_ap_continue();
    void thread_window_fn_U0_ap_start();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
