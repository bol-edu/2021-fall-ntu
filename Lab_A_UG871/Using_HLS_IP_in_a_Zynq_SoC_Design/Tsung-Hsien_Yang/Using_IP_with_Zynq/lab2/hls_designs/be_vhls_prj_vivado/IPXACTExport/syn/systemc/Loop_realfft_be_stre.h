// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_realfft_be_stre_HH_
#define _Loop_realfft_be_stre_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_realfft_be_stre : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > real_spectrum_lo_V_M_real_V_dout;
    sc_in< sc_logic > real_spectrum_lo_V_M_real_V_empty_n;
    sc_out< sc_logic > real_spectrum_lo_V_M_real_V_read;
    sc_in< sc_lv<16> > real_spectrum_lo_V_M_imag_V_dout;
    sc_in< sc_logic > real_spectrum_lo_V_M_imag_V_empty_n;
    sc_out< sc_logic > real_spectrum_lo_V_M_imag_V_read;
    sc_in< sc_lv<16> > real_spectrum_hi_V_M_real_V_dout;
    sc_in< sc_logic > real_spectrum_hi_V_M_real_V_empty_n;
    sc_out< sc_logic > real_spectrum_hi_V_M_real_V_read;
    sc_in< sc_lv<16> > real_spectrum_hi_V_M_imag_V_dout;
    sc_in< sc_logic > real_spectrum_hi_V_M_imag_V_empty_n;
    sc_out< sc_logic > real_spectrum_hi_V_M_imag_V_read;
    sc_in< sc_logic > dout_TREADY;
    sc_out< sc_lv<32> > dout_TDATA;
    sc_out< sc_logic > dout_TVALID;
    sc_out< sc_lv<1> > dout_TLAST;


    // Module declarations
    Loop_realfft_be_stre(sc_module_name name);
    SC_HAS_PROCESS(Loop_realfft_be_stre);

    ~Loop_realfft_be_stre();

    sc_trace_file* mVcdFile;

    regslice_both<32>* regslice_both_dout_V_data_U;
    regslice_both<1>* regslice_both_dout_V_last_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > dout_val_last_V_fu_202_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op28;
    sc_signal< sc_lv<1> > tmp_reg_239;
    sc_signal< sc_logic > io_acc_block_signal_op32;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > regslice_both_dout_V_data_U_apdone_blk;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > dout_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > real_spectrum_lo_V_M_real_V_blk_n;
    sc_signal< sc_logic > real_spectrum_lo_V_M_imag_V_blk_n;
    sc_signal< sc_logic > real_spectrum_hi_V_M_real_V_blk_n;
    sc_signal< sc_logic > real_spectrum_hi_V_M_imag_V_blk_n;
    sc_signal< sc_lv<9> > i4_0_i1_reg_156;
    sc_signal< sc_lv<9> > i_fu_196_p2;
    sc_signal< sc_lv<9> > i_reg_243;
    sc_signal< sc_lv<1> > dout_val_last_V_reg_248;
    sc_signal< sc_lv<1> > dout_val_last_V_reg_248_pp0_iter1_reg;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<9> > ap_phi_mux_i4_0_i1_phi_fu_160_p6;
    sc_signal< sc_lv<16> > ap_phi_mux_tmp_data_M_imag_V_phi_fu_173_p4;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_tmp_data_M_imag_V_reg_170;
    sc_signal< sc_lv<16> > ap_phi_mux_tmp_data_M_real_V_phi_fu_182_p4;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_tmp_data_M_real_V_reg_179;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<32> > dout_TDATA_int;
    sc_signal< sc_logic > dout_TVALID_int;
    sc_signal< sc_logic > dout_TREADY_int;
    sc_signal< sc_logic > regslice_both_dout_V_data_U_vld_out;
    sc_signal< sc_logic > regslice_both_dout_V_last_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_dout_V_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_dout_V_last_V_U_vld_out;
    sc_signal< bool > ap_condition_97;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_1FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_97();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_mux_i4_0_i1_phi_fu_160_p6();
    void thread_ap_phi_mux_tmp_data_M_imag_V_phi_fu_173_p4();
    void thread_ap_phi_mux_tmp_data_M_real_V_phi_fu_182_p4();
    void thread_ap_phi_reg_pp0_iter1_tmp_data_M_imag_V_reg_170();
    void thread_ap_phi_reg_pp0_iter1_tmp_data_M_real_V_reg_179();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_dout_TDATA_blk_n();
    void thread_dout_TDATA_int();
    void thread_dout_TVALID();
    void thread_dout_TVALID_int();
    void thread_dout_val_last_V_fu_202_p2();
    void thread_i_fu_196_p2();
    void thread_io_acc_block_signal_op28();
    void thread_io_acc_block_signal_op32();
    void thread_real_spectrum_hi_V_M_imag_V_blk_n();
    void thread_real_spectrum_hi_V_M_imag_V_read();
    void thread_real_spectrum_hi_V_M_real_V_blk_n();
    void thread_real_spectrum_hi_V_M_real_V_read();
    void thread_real_spectrum_lo_V_M_imag_V_blk_n();
    void thread_real_spectrum_lo_V_M_imag_V_read();
    void thread_real_spectrum_lo_V_M_real_V_blk_n();
    void thread_real_spectrum_lo_V_M_real_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
