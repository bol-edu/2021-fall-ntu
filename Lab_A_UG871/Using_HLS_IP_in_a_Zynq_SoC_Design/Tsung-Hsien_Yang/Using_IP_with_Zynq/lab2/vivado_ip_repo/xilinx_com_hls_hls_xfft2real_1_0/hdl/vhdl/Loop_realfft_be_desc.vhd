-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_realfft_be_desc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    real_spectrum_lo_V_M_real_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_lo_V_M_real_V_full_n : IN STD_LOGIC;
    real_spectrum_lo_V_M_real_V_write : OUT STD_LOGIC;
    real_spectrum_lo_V_M_imag_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_lo_V_M_imag_V_full_n : IN STD_LOGIC;
    real_spectrum_lo_V_M_imag_V_write : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_spectrum_hi_buf_i_0_ce0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_0_we0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_hi_buf_i_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_spectrum_hi_buf_i_1_ce0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_1_we0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_real_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce1 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce1 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of Loop_realfft_be_desc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal twid_rom_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal twid_rom_0_ce0 : STD_LOGIC;
    signal twid_rom_0_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal twid_rom_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal twid_rom_1_ce0 : STD_LOGIC;
    signal twid_rom_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal real_spectrum_lo_V_M_real_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln87_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal real_spectrum_lo_V_M_imag_V_blk_n : STD_LOGIC;
    signal i2_0_i_reg_246 : STD_LOGIC_VECTOR (8 downto 0);
    signal i2_0_i_reg_246_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal io_acc_block_signal_op161 : STD_LOGIC;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln87_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_883_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_300_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_887 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln91_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_892_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln96_fu_316_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln96_reg_896 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln96_fu_322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_reg_901 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_2_reg_926 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal trunc_ln111_fu_334_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln111_reg_941 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_946 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_946_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_946_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_946_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_946_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_946_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_946_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_953_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_960 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal p_Val2_4_fu_338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_965 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_18_reg_970 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_18_reg_970_pp0_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_18_reg_970_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_19_reg_975 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_19_reg_975_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_19_reg_975_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln111_fu_343_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln111_reg_980_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_fu_357_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_reg_985 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_fu_363_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_reg_990 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_995_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_2_reg_1000 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_2_reg_1000_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_1_fu_390_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_reg_1005 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_fu_396_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_reg_1010 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_reg_1015 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1015_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_5_reg_1020 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_5_reg_1020_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_7_reg_1025 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1030_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_3_reg_1035 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_3_reg_1035_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_1_reg_1040 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_4_reg_1045 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_3_fu_517_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_3_reg_1050 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_s_reg_1055 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_fu_546_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_1060_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_1060_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_1060_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_fu_557_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_1066 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_1066_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_1066_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_1066_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_4_fu_568_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_4_reg_1072 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1116_fu_574_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1116_reg_1077 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_fu_577_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_2_fu_580_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_2_reg_1089 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_1_fu_583_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_849_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_1_reg_1101 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_855_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1192_reg_1106 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_861_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_4_reg_1111 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal grp_fu_867_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_5_reg_1116 : STD_LOGIC_VECTOR (30 downto 0);
    signal cdata1_M_real_V_1_fu_604_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_real_V_1_reg_1121 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_imag_V_1_fu_609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_imag_V_1_reg_1126 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_real_V_1_fu_614_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_real_V_1_reg_1131 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_imag_V_1_fu_619_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_imag_V_1_reg_1136 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_real_V_fu_624_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_real_V_reg_1141 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_imag_V_fu_628_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_imag_V_reg_1146 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_real_V_reg_1151 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal cdata2_M_imag_V_reg_1156 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_1161 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_6_reg_1166 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_9_reg_1171 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_reg_1176 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_10_reg_1181 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_11_reg_1186 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_7_reg_1191 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_12_reg_1196 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_13_reg_1201 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_reg_1206 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_14_reg_1211 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_15_reg_1216 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_M_real_V_fu_792_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_M_real_V_reg_1221 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_M_imag_V_fu_807_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_M_imag_V_reg_1226 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_fu_822_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_reg_1231 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_5_fu_837_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1148_5_reg_1236 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_phi_mux_i2_0_i_phi_fu_250_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter12_t_V_7_reg_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter12_t_V_6_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter12_t_V_5_reg_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter12_t_V_4_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1265_fu_326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln96_fu_312_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_fu_354_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_fu_348_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_4_fu_387_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_3_fu_351_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1148_fu_448_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1148_fu_454_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1148_1_fu_470_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1148_2_fu_473_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_489_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_4_fu_502_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1148_8_fu_507_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1148_2_fu_451_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1148_5_fu_525_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1148_1_fu_541_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_3_fu_552_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_6_fu_563_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_V_fu_586_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_15_fu_595_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_fu_644_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_7_fu_656_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1148_2_fu_640_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_9_fu_690_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1148_4_fu_636_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_11_fu_724_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1148_6_fu_632_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_13_fu_758_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1148_8_fu_787_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_1_fu_784_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_10_fu_802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_3_fu_799_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_12_fu_817_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_5_fu_814_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1148_14_fu_832_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1148_7_fu_829_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_849_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_849_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_855_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_861_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_861_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_867_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_867_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_849_ce : STD_LOGIC;
    signal grp_fu_855_ce : STD_LOGIC;
    signal grp_fu_861_ce : STD_LOGIC;
    signal grp_fu_867_ce : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_849_p00 : STD_LOGIC_VECTOR (30 downto 0);

    component hls_xfft2real_muldEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_muleOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_macfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_macg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component Loop_realfft_be_dbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Loop_realfft_be_dcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    twid_rom_0_U : component Loop_realfft_be_dbkb
    generic map (
        DataWidth => 15,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_0_address0,
        ce0 => twid_rom_0_ce0,
        q0 => twid_rom_0_q0);

    twid_rom_1_U : component Loop_realfft_be_dcud
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_1_address0,
        ce0 => twid_rom_1_ce0,
        q0 => twid_rom_1_q0);

    hls_xfft2real_muldEe_U8 : component hls_xfft2real_muldEe
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_849_p0,
        din1 => grp_fu_849_p1,
        ce => grp_fu_849_ce,
        dout => grp_fu_849_p2);

    hls_xfft2real_muleOg_U9 : component hls_xfft2real_muleOg
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_855_p0,
        din1 => p_Val2_19_reg_975_pp0_iter5_reg,
        ce => grp_fu_855_ce,
        dout => grp_fu_855_p2);

    hls_xfft2real_macfYi_U10 : component hls_xfft2real_macfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_861_p0,
        din1 => grp_fu_861_p1,
        din2 => r_V_1_reg_1101,
        ce => grp_fu_861_ce,
        dout => grp_fu_861_p3);

    hls_xfft2real_macg8j_U11 : component hls_xfft2real_macg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_867_p0,
        din1 => grp_fu_867_p1,
        din2 => mul_ln1192_reg_1106,
        ce => grp_fu_867_ce,
        dout => grp_fu_867_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter12_t_V_4_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_4_reg_285 <= cdata1_M_real_V_1_reg_1121;
                elsif (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_4_reg_285 <= cdata1_M_real_V_reg_1141;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter12_t_V_4_reg_285 <= ap_phi_reg_pp0_iter11_t_V_4_reg_285;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter12_t_V_5_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_5_reg_276 <= cdata1_M_imag_V_1_reg_1126;
                elsif (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_5_reg_276 <= cdata1_M_imag_V_reg_1146;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter12_t_V_5_reg_276 <= ap_phi_reg_pp0_iter11_t_V_5_reg_276;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter12_t_V_6_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_6_reg_267 <= cdata2_M_real_V_1_reg_1131;
                elsif (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_6_reg_267 <= cdata2_M_real_V_reg_1151;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter12_t_V_6_reg_267 <= ap_phi_reg_pp0_iter11_t_V_6_reg_267;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter12_t_V_7_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_7_reg_258 <= cdata2_M_imag_V_1_reg_1136;
                elsif (((icmp_ln91_reg_892_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln87_reg_883_pp0_iter10_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter12_t_V_7_reg_258 <= cdata2_M_imag_V_reg_1156;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter12_t_V_7_reg_258 <= ap_phi_reg_pp0_iter11_t_V_7_reg_258;
                end if;
            end if; 
        end if;
    end process;

    i2_0_i_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883 = ap_const_lv1_0))) then 
                i2_0_i_reg_246 <= i_reg_887;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i2_0_i_reg_246 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_t_V_4_reg_285 <= ap_phi_reg_pp0_iter9_t_V_4_reg_285;
                ap_phi_reg_pp0_iter10_t_V_5_reg_276 <= ap_phi_reg_pp0_iter9_t_V_5_reg_276;
                ap_phi_reg_pp0_iter10_t_V_6_reg_267 <= ap_phi_reg_pp0_iter9_t_V_6_reg_267;
                ap_phi_reg_pp0_iter10_t_V_7_reg_258 <= ap_phi_reg_pp0_iter9_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_t_V_4_reg_285 <= ap_phi_reg_pp0_iter10_t_V_4_reg_285;
                ap_phi_reg_pp0_iter11_t_V_5_reg_276 <= ap_phi_reg_pp0_iter10_t_V_5_reg_276;
                ap_phi_reg_pp0_iter11_t_V_6_reg_267 <= ap_phi_reg_pp0_iter10_t_V_6_reg_267;
                ap_phi_reg_pp0_iter11_t_V_7_reg_258 <= ap_phi_reg_pp0_iter10_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_t_V_4_reg_285 <= ap_phi_reg_pp0_iter0_t_V_4_reg_285;
                ap_phi_reg_pp0_iter1_t_V_5_reg_276 <= ap_phi_reg_pp0_iter0_t_V_5_reg_276;
                ap_phi_reg_pp0_iter1_t_V_6_reg_267 <= ap_phi_reg_pp0_iter0_t_V_6_reg_267;
                ap_phi_reg_pp0_iter1_t_V_7_reg_258 <= ap_phi_reg_pp0_iter0_t_V_7_reg_258;
                i_reg_887 <= i_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_t_V_4_reg_285 <= ap_phi_reg_pp0_iter1_t_V_4_reg_285;
                ap_phi_reg_pp0_iter2_t_V_5_reg_276 <= ap_phi_reg_pp0_iter1_t_V_5_reg_276;
                ap_phi_reg_pp0_iter2_t_V_6_reg_267 <= ap_phi_reg_pp0_iter1_t_V_6_reg_267;
                ap_phi_reg_pp0_iter2_t_V_7_reg_258 <= ap_phi_reg_pp0_iter1_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_t_V_4_reg_285 <= ap_phi_reg_pp0_iter2_t_V_4_reg_285;
                ap_phi_reg_pp0_iter3_t_V_5_reg_276 <= ap_phi_reg_pp0_iter2_t_V_5_reg_276;
                ap_phi_reg_pp0_iter3_t_V_6_reg_267 <= ap_phi_reg_pp0_iter2_t_V_6_reg_267;
                ap_phi_reg_pp0_iter3_t_V_7_reg_258 <= ap_phi_reg_pp0_iter2_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_t_V_4_reg_285 <= ap_phi_reg_pp0_iter3_t_V_4_reg_285;
                ap_phi_reg_pp0_iter4_t_V_5_reg_276 <= ap_phi_reg_pp0_iter3_t_V_5_reg_276;
                ap_phi_reg_pp0_iter4_t_V_6_reg_267 <= ap_phi_reg_pp0_iter3_t_V_6_reg_267;
                ap_phi_reg_pp0_iter4_t_V_7_reg_258 <= ap_phi_reg_pp0_iter3_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_t_V_4_reg_285 <= ap_phi_reg_pp0_iter4_t_V_4_reg_285;
                ap_phi_reg_pp0_iter5_t_V_5_reg_276 <= ap_phi_reg_pp0_iter4_t_V_5_reg_276;
                ap_phi_reg_pp0_iter5_t_V_6_reg_267 <= ap_phi_reg_pp0_iter4_t_V_6_reg_267;
                ap_phi_reg_pp0_iter5_t_V_7_reg_258 <= ap_phi_reg_pp0_iter4_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_t_V_4_reg_285 <= ap_phi_reg_pp0_iter5_t_V_4_reg_285;
                ap_phi_reg_pp0_iter6_t_V_5_reg_276 <= ap_phi_reg_pp0_iter5_t_V_5_reg_276;
                ap_phi_reg_pp0_iter6_t_V_6_reg_267 <= ap_phi_reg_pp0_iter5_t_V_6_reg_267;
                ap_phi_reg_pp0_iter6_t_V_7_reg_258 <= ap_phi_reg_pp0_iter5_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_t_V_4_reg_285 <= ap_phi_reg_pp0_iter6_t_V_4_reg_285;
                ap_phi_reg_pp0_iter7_t_V_5_reg_276 <= ap_phi_reg_pp0_iter6_t_V_5_reg_276;
                ap_phi_reg_pp0_iter7_t_V_6_reg_267 <= ap_phi_reg_pp0_iter6_t_V_6_reg_267;
                ap_phi_reg_pp0_iter7_t_V_7_reg_258 <= ap_phi_reg_pp0_iter6_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_t_V_4_reg_285 <= ap_phi_reg_pp0_iter7_t_V_4_reg_285;
                ap_phi_reg_pp0_iter8_t_V_5_reg_276 <= ap_phi_reg_pp0_iter7_t_V_5_reg_276;
                ap_phi_reg_pp0_iter8_t_V_6_reg_267 <= ap_phi_reg_pp0_iter7_t_V_6_reg_267;
                ap_phi_reg_pp0_iter8_t_V_7_reg_258 <= ap_phi_reg_pp0_iter7_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_t_V_4_reg_285 <= ap_phi_reg_pp0_iter8_t_V_4_reg_285;
                ap_phi_reg_pp0_iter9_t_V_5_reg_276 <= ap_phi_reg_pp0_iter8_t_V_5_reg_276;
                ap_phi_reg_pp0_iter9_t_V_6_reg_267 <= ap_phi_reg_pp0_iter8_t_V_6_reg_267;
                ap_phi_reg_pp0_iter9_t_V_7_reg_258 <= ap_phi_reg_pp0_iter8_t_V_7_reg_258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter9_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter9_reg = ap_const_lv1_0))) then
                cdata1_M_imag_V_1_reg_1126 <= cdata1_M_imag_V_1_fu_609_p2;
                cdata1_M_real_V_1_reg_1121 <= cdata1_M_real_V_1_fu_604_p2;
                cdata2_M_imag_V_1_reg_1136 <= cdata2_M_imag_V_1_fu_619_p2;
                cdata2_M_real_V_1_reg_1131 <= cdata2_M_real_V_1_fu_614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_reg_892_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter9_reg = ap_const_lv1_0))) then
                cdata1_M_imag_V_reg_1146 <= cdata1_M_imag_V_fu_628_p2;
                cdata1_M_real_V_reg_1141 <= cdata1_M_real_V_fu_624_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_reg_892_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter9_reg = ap_const_lv1_0))) then
                cdata2_M_imag_V_reg_1156 <= descramble_buf_1_M_imag_V_q1;
                cdata2_M_real_V_reg_1151 <= descramble_buf_1_M_real_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter5_reg = ap_const_lv1_0))) then
                f_M_imag_V_reg_1066 <= f_M_imag_V_fu_557_p3;
                f_M_real_V_reg_1060 <= f_M_real_V_fu_546_p3;
                select_ln1148_4_reg_1072 <= select_ln1148_4_fu_568_p3;
                sext_ln1118_2_reg_1089 <= sext_ln1118_2_fu_580_p1;
                    zext_ln1116_reg_1077(14 downto 0) <= zext_ln1116_fu_574_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                f_M_imag_V_reg_1066_pp0_iter7_reg <= f_M_imag_V_reg_1066;
                f_M_imag_V_reg_1066_pp0_iter8_reg <= f_M_imag_V_reg_1066_pp0_iter7_reg;
                f_M_imag_V_reg_1066_pp0_iter9_reg <= f_M_imag_V_reg_1066_pp0_iter8_reg;
                f_M_real_V_reg_1060_pp0_iter7_reg <= f_M_real_V_reg_1060;
                f_M_real_V_reg_1060_pp0_iter8_reg <= f_M_real_V_reg_1060_pp0_iter7_reg;
                f_M_real_V_reg_1060_pp0_iter9_reg <= f_M_real_V_reg_1060_pp0_iter8_reg;
                icmp_ln87_reg_883_pp0_iter10_reg <= icmp_ln87_reg_883_pp0_iter9_reg;
                icmp_ln87_reg_883_pp0_iter11_reg <= icmp_ln87_reg_883_pp0_iter10_reg;
                icmp_ln87_reg_883_pp0_iter12_reg <= icmp_ln87_reg_883_pp0_iter11_reg;
                icmp_ln87_reg_883_pp0_iter13_reg <= icmp_ln87_reg_883_pp0_iter12_reg;
                icmp_ln87_reg_883_pp0_iter2_reg <= icmp_ln87_reg_883_pp0_iter1_reg;
                icmp_ln87_reg_883_pp0_iter3_reg <= icmp_ln87_reg_883_pp0_iter2_reg;
                icmp_ln87_reg_883_pp0_iter4_reg <= icmp_ln87_reg_883_pp0_iter3_reg;
                icmp_ln87_reg_883_pp0_iter5_reg <= icmp_ln87_reg_883_pp0_iter4_reg;
                icmp_ln87_reg_883_pp0_iter6_reg <= icmp_ln87_reg_883_pp0_iter5_reg;
                icmp_ln87_reg_883_pp0_iter7_reg <= icmp_ln87_reg_883_pp0_iter6_reg;
                icmp_ln87_reg_883_pp0_iter8_reg <= icmp_ln87_reg_883_pp0_iter7_reg;
                icmp_ln87_reg_883_pp0_iter9_reg <= icmp_ln87_reg_883_pp0_iter8_reg;
                icmp_ln91_reg_892_pp0_iter10_reg <= icmp_ln91_reg_892_pp0_iter9_reg;
                icmp_ln91_reg_892_pp0_iter2_reg <= icmp_ln91_reg_892_pp0_iter1_reg;
                icmp_ln91_reg_892_pp0_iter3_reg <= icmp_ln91_reg_892_pp0_iter2_reg;
                icmp_ln91_reg_892_pp0_iter4_reg <= icmp_ln91_reg_892_pp0_iter3_reg;
                icmp_ln91_reg_892_pp0_iter5_reg <= icmp_ln91_reg_892_pp0_iter4_reg;
                icmp_ln91_reg_892_pp0_iter6_reg <= icmp_ln91_reg_892_pp0_iter5_reg;
                icmp_ln91_reg_892_pp0_iter7_reg <= icmp_ln91_reg_892_pp0_iter6_reg;
                icmp_ln91_reg_892_pp0_iter8_reg <= icmp_ln91_reg_892_pp0_iter7_reg;
                icmp_ln91_reg_892_pp0_iter9_reg <= icmp_ln91_reg_892_pp0_iter8_reg;
                p_Val2_18_reg_970_pp0_iter4_reg <= p_Val2_18_reg_970;
                p_Val2_18_reg_970_pp0_iter5_reg <= p_Val2_18_reg_970_pp0_iter4_reg;
                p_Val2_19_reg_975_pp0_iter4_reg <= p_Val2_19_reg_975;
                p_Val2_19_reg_975_pp0_iter5_reg <= p_Val2_19_reg_975_pp0_iter4_reg;
                p_Val2_1_reg_953_pp0_iter4_reg <= p_Val2_1_reg_953;
                p_Val2_1_reg_953_pp0_iter5_reg <= p_Val2_1_reg_953_pp0_iter4_reg;
                p_Val2_1_reg_953_pp0_iter6_reg <= p_Val2_1_reg_953_pp0_iter5_reg;
                p_Val2_1_reg_953_pp0_iter7_reg <= p_Val2_1_reg_953_pp0_iter6_reg;
                p_Val2_1_reg_953_pp0_iter8_reg <= p_Val2_1_reg_953_pp0_iter7_reg;
                p_Val2_1_reg_953_pp0_iter9_reg <= p_Val2_1_reg_953_pp0_iter8_reg;
                p_Val2_s_reg_946_pp0_iter4_reg <= p_Val2_s_reg_946;
                p_Val2_s_reg_946_pp0_iter5_reg <= p_Val2_s_reg_946_pp0_iter4_reg;
                p_Val2_s_reg_946_pp0_iter6_reg <= p_Val2_s_reg_946_pp0_iter5_reg;
                p_Val2_s_reg_946_pp0_iter7_reg <= p_Val2_s_reg_946_pp0_iter6_reg;
                p_Val2_s_reg_946_pp0_iter8_reg <= p_Val2_s_reg_946_pp0_iter7_reg;
                p_Val2_s_reg_946_pp0_iter9_reg <= p_Val2_s_reg_946_pp0_iter8_reg;
                sub_ln111_reg_980_pp0_iter10_reg <= sub_ln111_reg_980_pp0_iter9_reg;
                sub_ln111_reg_980_pp0_iter11_reg <= sub_ln111_reg_980_pp0_iter10_reg;
                sub_ln111_reg_980_pp0_iter12_reg <= sub_ln111_reg_980_pp0_iter11_reg;
                sub_ln111_reg_980_pp0_iter13_reg <= sub_ln111_reg_980_pp0_iter12_reg;
                sub_ln111_reg_980_pp0_iter4_reg <= sub_ln111_reg_980;
                sub_ln111_reg_980_pp0_iter5_reg <= sub_ln111_reg_980_pp0_iter4_reg;
                sub_ln111_reg_980_pp0_iter6_reg <= sub_ln111_reg_980_pp0_iter5_reg;
                sub_ln111_reg_980_pp0_iter7_reg <= sub_ln111_reg_980_pp0_iter6_reg;
                sub_ln111_reg_980_pp0_iter8_reg <= sub_ln111_reg_980_pp0_iter7_reg;
                sub_ln111_reg_980_pp0_iter9_reg <= sub_ln111_reg_980_pp0_iter8_reg;
                tmp_2_reg_1015_pp0_iter5_reg <= tmp_2_reg_1015;
                tmp_4_reg_1030_pp0_iter5_reg <= tmp_4_reg_1030;
                tmp_reg_995_pp0_iter5_reg <= tmp_reg_995;
                trunc_ln1148_2_reg_1000_pp0_iter5_reg <= trunc_ln1148_2_reg_1000;
                trunc_ln1148_3_reg_1035_pp0_iter5_reg <= trunc_ln1148_3_reg_1035;
                trunc_ln1148_5_reg_1020_pp0_iter5_reg <= trunc_ln1148_5_reg_1020;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i2_0_i_reg_246_pp0_iter1_reg <= i2_0_i_reg_246;
                icmp_ln87_reg_883 <= icmp_ln87_fu_294_p2;
                icmp_ln87_reg_883_pp0_iter1_reg <= icmp_ln87_reg_883;
                icmp_ln91_reg_892_pp0_iter1_reg <= icmp_ln91_reg_892;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_fu_294_p2 = ap_const_lv1_0))) then
                icmp_ln91_reg_892 <= icmp_ln91_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter7_reg = ap_const_lv1_0))) then
                mul_ln1192_reg_1106 <= grp_fu_855_p2;
                r_V_1_reg_1101 <= grp_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter2_reg = ap_const_lv1_0))) then
                p_Val2_18_reg_970 <= twid_rom_0_q0;
                p_Val2_19_reg_975 <= twid_rom_1_q0;
                p_Val2_4_reg_965 <= p_Val2_4_fu_338_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter2_reg = ap_const_lv1_0))) then
                p_Val2_1_reg_953 <= descramble_buf_0_M_imag_V_q0;
                p_Val2_s_reg_946 <= descramble_buf_0_M_real_V_q0;
                sub_ln111_reg_980 <= sub_ln111_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Val2_2_reg_926 <= descramble_buf_1_M_imag_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter2_reg = ap_const_lv1_0))) then
                p_Val2_3_reg_960 <= descramble_buf_1_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter3_reg = ap_const_lv1_0))) then
                ret_V_1_reg_1005 <= ret_V_1_fu_390_p2;
                ret_V_2_reg_1010 <= ret_V_2_fu_396_p2;
                ret_V_3_reg_990 <= ret_V_3_fu_363_p2;
                ret_V_reg_985 <= ret_V_fu_357_p2;
                tmp_2_reg_1015 <= ret_V_1_fu_390_p2(16 downto 16);
                tmp_4_reg_1030 <= ret_V_3_fu_363_p2(16 downto 16);
                tmp_reg_995 <= ret_V_fu_357_p2(16 downto 16);
                trunc_ln1148_2_reg_1000 <= ret_V_fu_357_p2(16 downto 1);
                trunc_ln1148_3_reg_1035 <= ret_V_3_fu_363_p2(16 downto 1);
                trunc_ln1148_5_reg_1020 <= ret_V_1_fu_390_p2(16 downto 1);
                trunc_ln1148_7_reg_1025 <= ret_V_2_fu_396_p2(16 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter8_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter8_reg = ap_const_lv1_0))) then
                ret_V_4_reg_1111 <= grp_fu_861_p3;
                ret_V_5_reg_1116 <= grp_fu_867_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter4_reg = ap_const_lv1_0))) then
                select_ln1148_3_reg_1050 <= select_ln1148_3_fu_517_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter12_reg = ap_const_lv1_0))) then
                select_ln1148_5_reg_1236 <= select_ln1148_5_fu_837_p3;
                select_ln1148_reg_1231 <= select_ln1148_fu_822_p3;
                tmp_M_imag_V_reg_1226 <= tmp_M_imag_V_fu_807_p3;
                tmp_M_real_V_reg_1221 <= tmp_M_real_V_fu_792_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_fu_306_p2 = ap_const_lv1_0) and (icmp_ln87_fu_294_p2 = ap_const_lv1_0))) then
                sub_ln96_reg_896 <= sub_ln96_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter11_reg = ap_const_lv1_0))) then
                tmp_5_reg_1161 <= ap_phi_reg_pp0_iter12_t_V_4_reg_285(15 downto 15);
                tmp_6_reg_1176 <= ap_phi_reg_pp0_iter12_t_V_5_reg_276(15 downto 15);
                tmp_7_reg_1191 <= ap_phi_reg_pp0_iter12_t_V_6_reg_267(15 downto 15);
                tmp_8_reg_1206 <= ap_phi_reg_pp0_iter12_t_V_7_reg_258(15 downto 15);
                trunc_ln1148_10_reg_1181 <= sub_ln1148_9_fu_690_p2(16 downto 1);
                trunc_ln1148_11_reg_1186 <= ap_phi_reg_pp0_iter12_t_V_5_reg_276(15 downto 1);
                trunc_ln1148_12_reg_1196 <= sub_ln1148_11_fu_724_p2(16 downto 1);
                trunc_ln1148_13_reg_1201 <= ap_phi_reg_pp0_iter12_t_V_6_reg_267(15 downto 1);
                trunc_ln1148_14_reg_1211 <= sub_ln1148_13_fu_758_p2(16 downto 1);
                trunc_ln1148_15_reg_1216 <= ap_phi_reg_pp0_iter12_t_V_7_reg_258(15 downto 1);
                trunc_ln1148_6_reg_1166 <= sub_ln1148_7_fu_656_p2(16 downto 1);
                trunc_ln1148_9_reg_1171 <= ap_phi_reg_pp0_iter12_t_V_4_reg_285(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter1_reg = ap_const_lv1_0))) then
                trunc_ln111_reg_941 <= trunc_ln111_fu_334_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_995 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter4_reg = ap_const_lv1_0))) then
                trunc_ln1148_1_reg_1040 <= sub_ln1148_fu_454_p2(16 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_reg_1015 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter4_reg = ap_const_lv1_0))) then
                trunc_ln1148_4_reg_1045 <= sub_ln1148_2_fu_473_p2(16 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1030 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln87_reg_883_pp0_iter4_reg = ap_const_lv1_0))) then
                trunc_ln1148_s_reg_1055 <= sub_ln1148_5_fu_525_p2(16 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln91_reg_892 = ap_const_lv1_0) and (icmp_ln87_reg_883 = ap_const_lv1_0))) then
                    zext_ln96_reg_901(7 downto 0) <= zext_ln96_fu_322_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln96_reg_901(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1116_reg_1077(30 downto 15) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter14, icmp_ln87_fu_294_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln87_fu_294_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln87_fu_294_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, io_acc_block_signal_op161)
    begin
                ap_block_pp0_stage0_01001 <= ((io_acc_block_signal_op161 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, io_acc_block_signal_op161)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op161 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, io_acc_block_signal_op161)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op161 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter14_assign_proc : process(icmp_ln87_reg_883_pp0_iter13_reg, io_acc_block_signal_op161)
    begin
                ap_block_state16_pp0_stage0_iter14 <= ((io_acc_block_signal_op161 = ap_const_logic_0) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln87_fu_294_p2)
    begin
        if ((icmp_ln87_fu_294_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i2_0_i_phi_fu_250_p4_assign_proc : process(ap_block_pp0_stage0, icmp_ln87_reg_883, i2_0_i_reg_246, ap_CS_fsm_pp0_stage0, i_reg_887, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln87_reg_883 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i2_0_i_phi_fu_250_p4 <= i_reg_887;
        else 
            ap_phi_mux_i2_0_i_phi_fu_250_p4 <= i2_0_i_reg_246;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_t_V_4_reg_285 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_5_reg_276 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_6_reg_267 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_7_reg_258 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    cdata1_M_imag_V_1_fu_609_p2 <= std_logic_vector(unsigned(f_M_imag_V_reg_1066_pp0_iter9_reg) + unsigned(p_Val2_15_fu_595_p4));
    cdata1_M_imag_V_fu_628_p2 <= std_logic_vector(signed(p_Val2_s_reg_946_pp0_iter9_reg) - signed(p_Val2_1_reg_953_pp0_iter9_reg));
    cdata1_M_real_V_1_fu_604_p2 <= std_logic_vector(unsigned(f_M_real_V_reg_1060_pp0_iter9_reg) + unsigned(p_r_V_fu_586_p4));
    cdata1_M_real_V_fu_624_p2 <= std_logic_vector(signed(p_Val2_1_reg_953_pp0_iter9_reg) + signed(p_Val2_s_reg_946_pp0_iter9_reg));
    cdata2_M_imag_V_1_fu_619_p2 <= std_logic_vector(unsigned(p_Val2_15_fu_595_p4) - unsigned(f_M_imag_V_reg_1066_pp0_iter9_reg));
    cdata2_M_real_V_1_fu_614_p2 <= std_logic_vector(unsigned(f_M_real_V_reg_1060_pp0_iter9_reg) - unsigned(p_r_V_fu_586_p4));
    descramble_buf_0_M_imag_V_address0 <= zext_ln1265_fu_326_p1(8 - 1 downto 0);

    descramble_buf_0_M_imag_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_0_M_real_V_address0 <= zext_ln1265_fu_326_p1(8 - 1 downto 0);

    descramble_buf_0_M_real_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_imag_V_address0 <= zext_ln96_fu_322_p1(8 - 1 downto 0);
    descramble_buf_1_M_imag_V_address1 <= ap_const_lv64_0(8 - 1 downto 0);

    descramble_buf_1_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_imag_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_real_V_address0 <= zext_ln96_reg_901(8 - 1 downto 0);
    descramble_buf_1_M_real_V_address1 <= ap_const_lv64_0(8 - 1 downto 0);

    descramble_buf_1_M_real_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_real_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_M_imag_V_fu_557_p3 <= 
        sub_ln1148_3_fu_552_p2 when (tmp_2_reg_1015_pp0_iter5_reg(0) = '1') else 
        trunc_ln1148_5_reg_1020_pp0_iter5_reg;
    f_M_real_V_fu_546_p3 <= 
        sub_ln1148_1_fu_541_p2 when (tmp_reg_995_pp0_iter5_reg(0) = '1') else 
        trunc_ln1148_2_reg_1000_pp0_iter5_reg;

    grp_fu_849_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_849_ce <= ap_const_logic_1;
        else 
            grp_fu_849_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_849_p0 <= grp_fu_849_p00(15 - 1 downto 0);
    grp_fu_849_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_18_reg_970_pp0_iter5_reg),31));
    grp_fu_849_p1 <= sext_ln1118_fu_577_p1(16 - 1 downto 0);

    grp_fu_855_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_855_ce <= ap_const_logic_1;
        else 
            grp_fu_855_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_855_p0 <= sext_ln1118_fu_577_p1(16 - 1 downto 0);

    grp_fu_861_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_861_ce <= ap_const_logic_1;
        else 
            grp_fu_861_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_861_p0 <= sext_ln1118_2_reg_1089(16 - 1 downto 0);
    grp_fu_861_p1 <= sext_ln1118_1_fu_583_p1(16 - 1 downto 0);

    grp_fu_867_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_867_ce <= ap_const_logic_1;
        else 
            grp_fu_867_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_867_p0 <= zext_ln1116_reg_1077(15 - 1 downto 0);
    grp_fu_867_p1 <= sext_ln1118_1_fu_583_p1(16 - 1 downto 0);
    i_fu_300_p2 <= std_logic_vector(unsigned(ap_phi_mux_i2_0_i_phi_fu_250_p4) + unsigned(ap_const_lv9_1));
    icmp_ln87_fu_294_p2 <= "1" when (ap_phi_mux_i2_0_i_phi_fu_250_p4 = ap_const_lv9_100) else "0";
    icmp_ln91_fu_306_p2 <= "1" when (ap_phi_mux_i2_0_i_phi_fu_250_p4 = ap_const_lv9_0) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op161 <= (real_spectrum_lo_V_M_real_V_full_n and real_spectrum_lo_V_M_imag_V_full_n);
        lhs_V_4_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_953),17));

        lhs_V_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_946),17));

    p_Val2_15_fu_595_p4 <= ret_V_5_reg_1116(30 downto 15);
    p_Val2_4_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_2_reg_926));
    p_r_V_fu_586_p4 <= ret_V_4_reg_1111(30 downto 15);
    r_V_fu_489_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(ret_V_2_reg_1010));
    real_spectrum_hi_buf_i_0_address0 <= zext_ln111_fu_844_p1(8 - 1 downto 0);

    real_spectrum_hi_buf_i_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_spectrum_hi_buf_i_0_ce0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_i_0_d0 <= select_ln1148_reg_1231;

    real_spectrum_hi_buf_i_0_we0_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0))) then 
            real_spectrum_hi_buf_i_0_we0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_i_1_address0 <= zext_ln111_fu_844_p1(8 - 1 downto 0);

    real_spectrum_hi_buf_i_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_spectrum_hi_buf_i_1_ce0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_i_1_d0 <= select_ln1148_5_reg_1236;

    real_spectrum_hi_buf_i_1_we0_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0))) then 
            real_spectrum_hi_buf_i_1_we0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_spectrum_lo_V_M_imag_V_blk_n_assign_proc : process(real_spectrum_lo_V_M_imag_V_full_n, ap_enable_reg_pp0_iter14, ap_block_pp0_stage0, icmp_ln87_reg_883_pp0_iter13_reg)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            real_spectrum_lo_V_M_imag_V_blk_n <= real_spectrum_lo_V_M_imag_V_full_n;
        else 
            real_spectrum_lo_V_M_imag_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_spectrum_lo_V_M_imag_V_din <= tmp_M_imag_V_reg_1226;

    real_spectrum_lo_V_M_imag_V_write_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0))) then 
            real_spectrum_lo_V_M_imag_V_write <= ap_const_logic_1;
        else 
            real_spectrum_lo_V_M_imag_V_write <= ap_const_logic_0;
        end if; 
    end process;


    real_spectrum_lo_V_M_real_V_blk_n_assign_proc : process(real_spectrum_lo_V_M_real_V_full_n, ap_enable_reg_pp0_iter14, ap_block_pp0_stage0, icmp_ln87_reg_883_pp0_iter13_reg)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            real_spectrum_lo_V_M_real_V_blk_n <= real_spectrum_lo_V_M_real_V_full_n;
        else 
            real_spectrum_lo_V_M_real_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_spectrum_lo_V_M_real_V_din <= tmp_M_real_V_reg_1221;

    real_spectrum_lo_V_M_real_V_write_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln87_reg_883_pp0_iter13_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln87_reg_883_pp0_iter13_reg = ap_const_lv1_0))) then 
            real_spectrum_lo_V_M_real_V_write <= ap_const_logic_1;
        else 
            real_spectrum_lo_V_M_real_V_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_390_p2 <= std_logic_vector(signed(lhs_V_4_fu_387_p1) + signed(rhs_V_3_fu_351_p1));
    ret_V_2_fu_396_p2 <= std_logic_vector(signed(rhs_V_3_fu_351_p1) - signed(lhs_V_4_fu_387_p1));
    ret_V_3_fu_363_p2 <= std_logic_vector(signed(rhs_V_fu_348_p1) - signed(lhs_V_fu_354_p1));
    ret_V_fu_357_p2 <= std_logic_vector(signed(lhs_V_fu_354_p1) + signed(rhs_V_fu_348_p1));
        rhs_V_3_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_965),17));

        rhs_V_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_960),17));

    select_ln1148_3_fu_517_p3 <= 
        sub_ln1148_4_fu_502_p2 when (tmp_3_fu_494_p3(0) = '1') else 
        trunc_ln1148_8_fu_507_p4;
    select_ln1148_4_fu_568_p3 <= 
        sub_ln1148_6_fu_563_p2 when (tmp_4_reg_1030_pp0_iter5_reg(0) = '1') else 
        trunc_ln1148_3_reg_1035_pp0_iter5_reg;
    select_ln1148_5_fu_837_p3 <= 
        sub_ln1148_14_fu_832_p2 when (tmp_8_reg_1206(0) = '1') else 
        sext_ln1148_7_fu_829_p1;
    select_ln1148_fu_822_p3 <= 
        sub_ln1148_12_fu_817_p2 when (tmp_7_reg_1191(0) = '1') else 
        sext_ln1148_5_fu_814_p1;
        sext_ln1118_1_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_4_reg_1072),31));

        sext_ln1118_2_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_19_reg_975_pp0_iter5_reg),31));

        sext_ln1118_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_3_reg_1050),31));

        sext_ln1148_1_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_9_reg_1171),16));

        sext_ln1148_2_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter12_t_V_5_reg_276),17));

        sext_ln1148_3_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_11_reg_1186),16));

        sext_ln1148_4_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter12_t_V_6_reg_267),17));

        sext_ln1148_5_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_13_reg_1201),16));

        sext_ln1148_6_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter12_t_V_7_reg_258),17));

        sext_ln1148_7_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_15_reg_1216),16));

        sext_ln1148_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter12_t_V_4_reg_285),17));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln111_fu_343_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(trunc_ln111_reg_941));
    sub_ln1148_10_fu_802_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_10_reg_1181));
    sub_ln1148_11_fu_724_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_4_fu_636_p1));
    sub_ln1148_12_fu_817_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_12_reg_1196));
    sub_ln1148_13_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_6_fu_632_p1));
    sub_ln1148_14_fu_832_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_14_reg_1211));
    sub_ln1148_1_fu_541_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_1_reg_1040));
    sub_ln1148_2_fu_473_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln1148_1_fu_470_p1));
    sub_ln1148_3_fu_552_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_4_reg_1045));
    sub_ln1148_4_fu_502_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_7_reg_1025));
    sub_ln1148_5_fu_525_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln1148_2_fu_451_p1));
    sub_ln1148_6_fu_563_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_s_reg_1055));
    sub_ln1148_7_fu_656_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_fu_644_p1));
    sub_ln1148_8_fu_787_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1148_6_reg_1166));
    sub_ln1148_9_fu_690_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1148_2_fu_640_p1));
    sub_ln1148_fu_454_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln1148_fu_448_p1));
    sub_ln96_fu_316_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(trunc_ln96_fu_312_p1));
    tmp_3_fu_494_p3 <= r_V_fu_489_p2(16 downto 16);
    tmp_M_imag_V_fu_807_p3 <= 
        sub_ln1148_10_fu_802_p2 when (tmp_6_reg_1176(0) = '1') else 
        sext_ln1148_3_fu_799_p1;
    tmp_M_real_V_fu_792_p3 <= 
        sub_ln1148_8_fu_787_p2 when (tmp_5_reg_1161(0) = '1') else 
        sext_ln1148_1_fu_784_p1;
    trunc_ln111_fu_334_p1 <= i2_0_i_reg_246_pp0_iter1_reg(8 - 1 downto 0);
    trunc_ln1148_8_fu_507_p4 <= r_V_fu_489_p2(16 downto 1);
    trunc_ln96_fu_312_p1 <= ap_phi_mux_i2_0_i_phi_fu_250_p4(8 - 1 downto 0);
    twid_rom_0_address0 <= zext_ln1265_fu_326_p1(8 - 1 downto 0);

    twid_rom_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twid_rom_0_ce0 <= ap_const_logic_1;
        else 
            twid_rom_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_1_address0 <= zext_ln1265_fu_326_p1(8 - 1 downto 0);

    twid_rom_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twid_rom_1_ce0 <= ap_const_logic_1;
        else 
            twid_rom_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1116_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_18_reg_970_pp0_iter5_reg),31));
    zext_ln111_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln111_reg_980_pp0_iter13_reg),64));
    zext_ln1148_1_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_1_reg_1005),18));
    zext_ln1148_2_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_reg_990),18));
    zext_ln1148_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_reg_985),18));
    zext_ln1265_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_i_reg_246_pp0_iter1_reg),64));
    zext_ln96_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln96_reg_896),64));
end behav;
